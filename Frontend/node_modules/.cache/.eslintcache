[{"D:\\Works\\Mich\\scharerity\\Frontend\\src\\index.js":"1","D:\\Works\\Mich\\scharerity\\Frontend\\src\\App.js":"2","D:\\Works\\Mich\\scharerity\\Frontend\\src\\reportWebVitals.js":"3","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Navbar.js":"4","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Item.js":"5","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\LoadingScreen.js":"6","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\MessageScreen.js":"7","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Store.js":"8","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\ItemActions.js":"9","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Constants\\allConstants.js":"10","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Constants\\AllConstants.js":"11","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\BasketReducer.js":"12","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\BasketActions.js":"13","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\UserReducer.js":"14","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\UserActions.js":"15","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\OrderActions.js":"16","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\OrderReducer.js":"17","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\ItemReducer.js":"18","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\PrivateRoute.js":"19","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Showitems.js":"20","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\AdminRoute.js":"21","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Styles\\Styled.js":"22","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Footer.js":"23","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\GiverRoute.js":"24","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Basket.js":"25","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\ItemDetails.js":"26","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\ItemEdit.js":"27","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\ItemList.js":"28","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Login.js":"29","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\OrderHistory.js":"30","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\OrderList.js":"31","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\OrderOverview.js":"32","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Overview.js":"33","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Payment.js":"34","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Profile.js":"35","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\UserEdit.js":"36","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\UserList.js":"37","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Giver.js":"38","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Shipping.js":"39","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Register.js":"40","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Searchbox.js":"41","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\SearchResult.js":"42","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\CategoryList.js":"43"},{"size":634,"mtime":1618334788755,"results":"44","hashOfConfig":"45"},{"size":2872,"mtime":1619806786810,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1618221251277,"results":"47","hashOfConfig":"45"},{"size":13650,"mtime":1620063075632,"results":"48","hashOfConfig":"45"},{"size":2002,"mtime":1619459356514,"results":"49","hashOfConfig":"45"},{"size":637,"mtime":1619209146504,"results":"50","hashOfConfig":"45"},{"size":1116,"mtime":1619209373896,"results":"51","hashOfConfig":"45"},{"size":2420,"mtime":1619544640711,"results":"52","hashOfConfig":"45"},{"size":4495,"mtime":1619474252882,"results":"53","hashOfConfig":"45"},{"size":452,"mtime":1618432920160,"results":"54","hashOfConfig":"45"},{"size":4643,"mtime":1619544140702,"results":"55","hashOfConfig":"45"},{"size":1882,"mtime":1619269664603,"results":"56","hashOfConfig":"45"},{"size":1916,"mtime":1619269438624,"results":"57","hashOfConfig":"45"},{"size":5158,"mtime":1619544602741,"results":"58","hashOfConfig":"45"},{"size":6396,"mtime":1619215749603,"results":"59","hashOfConfig":"45"},{"size":5324,"mtime":1619048771749,"results":"60","hashOfConfig":"45"},{"size":4164,"mtime":1618928411673,"results":"61","hashOfConfig":"45"},{"size":4128,"mtime":1619474187298,"results":"62","hashOfConfig":"45"},{"size":553,"mtime":1618829781730,"results":"63","hashOfConfig":"45"},{"size":1893,"mtime":1619459373863,"results":"64","hashOfConfig":"45"},{"size":571,"mtime":1618866252474,"results":"65","hashOfConfig":"45"},{"size":5389,"mtime":1619463721489,"results":"66","hashOfConfig":"45"},{"size":2131,"mtime":1619264100984,"results":"67","hashOfConfig":"45"},{"size":573,"mtime":1619043361756,"results":"68","hashOfConfig":"45"},{"size":6442,"mtime":1619269381862,"results":"69","hashOfConfig":"45"},{"size":6098,"mtime":1619807326161,"results":"70","hashOfConfig":"45"},{"size":10389,"mtime":1619457423070,"results":"71","hashOfConfig":"45"},{"size":9395,"mtime":1619812426251,"results":"72","hashOfConfig":"45"},{"size":4290,"mtime":1619171487873,"results":"73","hashOfConfig":"45"},{"size":3846,"mtime":1619171875377,"results":"74","hashOfConfig":"45"},{"size":6104,"mtime":1620057188971,"results":"75","hashOfConfig":"45"},{"size":8843,"mtime":1620059392447,"results":"76","hashOfConfig":"45"},{"size":8967,"mtime":1619810055645,"results":"77","hashOfConfig":"45"},{"size":5368,"mtime":1619172156179,"results":"78","hashOfConfig":"45"},{"size":11164,"mtime":1619815089922,"results":"79","hashOfConfig":"45"},{"size":6042,"mtime":1619809858807,"results":"80","hashOfConfig":"45"},{"size":6049,"mtime":1619261067766,"results":"81","hashOfConfig":"45"},{"size":4376,"mtime":1619214629007,"results":"82","hashOfConfig":"45"},{"size":6657,"mtime":1619172207344,"results":"83","hashOfConfig":"45"},{"size":5798,"mtime":1619216382525,"results":"84","hashOfConfig":"45"},{"size":1445,"mtime":1619275940499,"results":"85","hashOfConfig":"45"},{"size":2729,"mtime":1619537406201,"results":"86","hashOfConfig":"45"},{"size":2442,"mtime":1619467122316,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"kvpeh4",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"D:\\Works\\Mich\\scharerity\\Frontend\\src\\index.js",[],["187","188"],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\App.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\reportWebVitals.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Navbar.js",["189"],"import { Dropdown, DropdownItem, DropdownMenu } from 'styled-dropdown-component';\r\nimport {\r\n    RiAdminLine,\r\n    RiBookletLine,\r\n    RiDashboardLine,\r\n    RiEditLine,\r\n    RiFileListLine,\r\n    RiHistoryLine,\r\n    RiHome2Line,\r\n    RiLoginBoxLine,\r\n    RiLogoutBoxLine,\r\n    RiShoppingBasketLine,\r\n    RiUser3Line\r\n} from 'react-icons/ri';\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport Searchbox from './Searchbox';\r\nimport { logoutUser } from './Redux/Actions/UserActions';\r\nimport styled from 'styled-components';\r\n\r\nconst Nav = styled.nav`\r\n    padding: 0 20px;\r\n    min-height: 9vh;\r\n    background: #f8f5f1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (min-width: 769px) {\r\n        justify-content: center;\r\n    }\r\n`;\r\nconst DesktopLogo = styled.h1`\r\n    font-size: 40px;\r\n    color: #4b778d;\r\n    border: 1px solid #28b5b5;\r\n    padding: 5px;\r\n    cursor: default;\r\n    background-color: #f8ede3;\r\n\r\n    @media (max-width: 770px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst MobileLogo = styled.h1`\r\n    font-size: 30px;\r\n    color: #4b778d;\r\n    border: 1px solid #28b5b5;\r\n    padding: 5px;\r\n\r\n    @media (min-width: 769px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst Menu = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    padding: 5px;\r\n    border: 1px solid #28b5b5;\r\n    background-color: #f8ede3;\r\n\r\n    @media (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`; \r\nconst ListItem = styled.li`\r\n    font-size: 20px;\r\n    color: #4b778d;\r\n    text-decoration: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0 10px;\r\n    align-items: center;\r\n    transition: 0.5s;\r\n    letter-spacing: 1px;\r\n\r\n    :hover {\r\n        transform: scale(0.9);\r\n    }\r\n`;\r\nconst NavIcon = styled.button`\r\n    background: none;\r\n    cursor: pointer;\r\n    border: none;\r\n    outline: none;\r\n\r\n    @media (min-width: 769px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst Line = styled.span`\r\n    display: block;\r\n    border-radius: 50px;\r\n    width: 25px;\r\n    height: 3px;\r\n    margin: 5px;\r\n    background-color: #4b778d;\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    :nth-child(2) {\r\n        width: ${props => (props.open ? \"40%\" : \"70%\")};\r\n    }\r\n`;\r\nconst Overlay = styled.div`\r\n    position: absolute;\r\n    height: ${props => (props.open ? \"91vh\" : 0)};\r\n    width: 100vw;\r\n    background: #f8f5f1;\r\n    transition: height 0.4s ease-in-out;\r\n\r\n    @media (min-width: 769px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst OverlayMenu = styled.ul`\r\n    list-style: none;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 45%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 0;\r\n    \r\n    li {\r\n        border: 1px solid #28b5b5;\r\n        padding: 5px;\r\n        text-alignment: center;\r\n        opacity: ${props => (props.open ? 1 : 0)};\r\n        font-size: 25px;\r\n        margin: 30px 0px;\r\n        transition: opacity 0.4s ease-in-out;\r\n    }\r\n\r\n    li:nth-child(2) {\r\n        margin: 30px 0px;\r\n    }\r\n`;\r\nconst List = styled.span`\r\n    margin: 0 8px;\r\n    cursor: pointer;\r\n`;\r\nconst CustomDropdownMenu = styled(DropdownMenu)`\r\n    background: #f8f5f1;\r\n    border: 1px solid #28b5b5;\r\n    border-radius: 0;\r\n    transition: 0.5s;\r\n`;\r\nconst CustomDropdownItem = styled(DropdownItem)`\r\n    color: #4b778d;\r\n\r\n    :hover {\r\n        color: #4b778d;\r\n        background-color: #f8ede3;\r\n    }\r\n`;\r\nconst SearchSection = styled.div`\r\n    display: flex;\r\n    flex-flow: rows wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #f8f5f1;\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport default function Navbar() {\r\n    const [moreOpen, setMoreOpen] = React.useState(true);\r\n    const [adminOpen, setAdminOpen] = React.useState(true);\r\n    const [toggle, setToggleNav] = React.useState(false);\r\n    const basket = useSelector(state => state.basket);\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const dispatch = useDispatch();\r\n    const { basketItems } = basket;\r\n    const { userData } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        if(window.confirm(`ต้องการออกจากบัญชี \"${userData.fullname}\" หรือไม่?`)) {\r\n            dispatch(logoutUser());\r\n        };\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div style={{display: 'flex', justifyContent: 'center', backgroundColor: '#f8f5f1'}}>\r\n                <DesktopLogo>Sharerity</DesktopLogo>\r\n            </div>\r\n            <Nav>\r\n                <MobileLogo>Sharerity</MobileLogo>\r\n\r\n                <Menu>\r\n                    <ListItem>\r\n                        <RiHome2Line />\r\n                        <Link to='/' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>หน้าหลัก</List>\r\n                        </Link>\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <RiShoppingBasketLine />\r\n                        <Link to='/basket' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>ตะกร้าหนังสือ</List>\r\n                            {basketItems.length > 0 && (\r\n                                <span>({basketItems.length})</span>\r\n                            )}\r\n                        </Link>\r\n                    </ListItem>\r\n\r\n                    {userData ? ( null ) : (\r\n                        <ListItem>\r\n                            <RiLoginBoxLine />\r\n                            <Link to='/login' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                <List>เข้าสู่ระบบ</List>\r\n                            </Link>\r\n                        </ListItem>\r\n                    )}\r\n                </Menu>\r\n\r\n                {userData ? (\r\n                    <Menu style={{marginLeft: '10px'}}>\r\n                        <Dropdown>\r\n                            <ListItem>\r\n                            <RiUser3Line />\r\n                                <List onClick={() => setMoreOpen(!moreOpen)}>{userData.fullname}</List>\r\n                            </ListItem>\r\n\r\n                            <CustomDropdownMenu hidden={moreOpen} toggle={() => setMoreOpen(!moreOpen)}>\r\n                                {userData && userData.isGiver && (\r\n                                    <>\r\n                                        <CustomDropdownItem>\r\n                                        <RiBookletLine />\r\n                                        <Link to='/itemlist/giver' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                            <List>รายการหนังสือ</List>\r\n                                        </Link>\r\n                                        </CustomDropdownItem>\r\n\r\n                                        <CustomDropdownItem>\r\n                                        <RiFileListLine />\r\n                                        <Link to='/orderlist/giver' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                            <List>รายการบริจาค</List>\r\n                                        </Link>\r\n                                        </CustomDropdownItem>\r\n                                        <hr style={{border: '0', height: '1px', background: '#28b5b5', margin: '5px 10px'}} />\r\n                                    </>\r\n                                )}\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiHistoryLine />\r\n                                    <Link to='/orderhistory' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>ประวัติการรับบริจาค</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiEditLine />\r\n                                    <Link to='/profile' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>แก้ไขข้อมูลส่วนตัว</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiLogoutBoxLine />\r\n                                    <Link\r\n                                        style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}\r\n                                        onClick={logoutHandler}\r\n                                    >\r\n                                        <List>ออกจากระบบ</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n                            </CustomDropdownMenu>\r\n                        </Dropdown>\r\n                    </Menu>\r\n                ) : null}\r\n\r\n                {userData && userData.isAdmin && (\r\n                    <Menu style={{marginLeft: '10px'}}>\r\n                        <Dropdown>\r\n                            <ListItem>\r\n                            <RiAdminLine />\r\n                                <List onClick={() => setAdminOpen(!adminOpen)}>แอดมิน</List>\r\n                            </ListItem>\r\n\r\n                            <CustomDropdownMenu hidden={adminOpen} toggle={() => setAdminOpen(!adminOpen)}>\r\n                                {/* <CustomDropdownItem>\r\n                                    <RiDashboardLine />\r\n                                    <Link to='/dashboard' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>แดชบอร์ด</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem> */}\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiUser3Line />\r\n                                    <Link to='/userlist' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>ผู้ใช้งาน</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiBookletLine />\r\n                                    <Link to='/itemlist' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>รายการหนังสือ</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiFileListLine />\r\n                                    <Link to='/orderlist' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>รายการบริจาค</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                            </CustomDropdownMenu>\r\n                        </Dropdown>\r\n                    </Menu>\r\n                )}\r\n\r\n                <NavIcon onClick={() => setToggleNav(!toggle)}>\r\n                    <Line open={toggle} />\r\n                    <Line open={toggle} />\r\n                    <Line open={toggle} />\r\n                </NavIcon>\r\n            </Nav>\r\n            <Router>\r\n                <Switch>\r\n                    <Route render={({history}) => (\r\n                        <SearchSection>\r\n                            <Searchbox history={history} />\r\n                        </SearchSection>\r\n                    )}></Route>\r\n                </Switch>\r\n            </Router>\r\n\r\n            <Overlay open={toggle}>\r\n                <OverlayMenu open={toggle}>\r\n\r\n                    <ListItem>\r\n                        <RiHome2Line />\r\n                        <Link to='/' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>หน้าหลัก</List>\r\n                        </Link>\r\n                    </ListItem>\r\n                    \r\n                    <ListItem>\r\n                        <RiLoginBoxLine />\r\n                        <Link to='/login' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>เข้าสู่ระบบ</List>\r\n                        </Link>\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <RiShoppingBasketLine />\r\n                        <Link to='/basket' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>ตะกร้าหนังสือ</List>\r\n                            {basketItems.length > 0 && (\r\n                                <span>({basketItems.length})</span>\r\n                            )}\r\n                        </Link>\r\n                    </ListItem>\r\n    \r\n                </OverlayMenu>\r\n            </Overlay>\r\n\r\n        </React.Fragment>\r\n    )\r\n}","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Item.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\LoadingScreen.js",["190"],"import ClipLoader from 'react-spinners/ClipLoader';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #f8f5f1;\r\n    // padding: 50px 0;\r\n    height: 100%;\r\n`;\r\n\r\nexport default function LoadingScreen(props) {\r\n    const [color, setColor] = React.useState('#28b5b5')\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Container>\r\n                <ClipLoader color={color} size={120} />\r\n            </Container>\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\MessageScreen.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Store.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\ItemActions.js",["191"],"import {\r\n    ITEM_CATEGORY_LIST_FAILURE,\r\n    ITEM_CATEGORY_LIST_REQUEST,\r\n    ITEM_CATEGORY_LIST_SUCCESS,\r\n    ITEM_CREATE_FAILURE,\r\n    ITEM_CREATE_REQUEST,\r\n    ITEM_CREATE_SUCCESS,\r\n    ITEM_DELETE_FAILURE,\r\n    ITEM_DELETE_REQUEST,\r\n    ITEM_DELETE_SUCCESS,\r\n    ITEM_DETAILS_FAILURE,\r\n    ITEM_DETAILS_REQUEST,\r\n    ITEM_DETAILS_SUCCESS,\r\n    ITEM_LIST_FAILURE,\r\n    ITEM_LIST_REQUEST,\r\n    ITEM_LIST_SUCCESS,\r\n    ITEM_UPDATE_FAILURE,\r\n    ITEM_UPDATE_REQUEST,\r\n    ITEM_UPDATE_SUCCESS\r\n} from '../Constants/AllConstants';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const listItems = ({ giver = '', title = '', category = '', }) => async (dispatch) => {\r\n    dispatch({\r\n        type: ITEM_LIST_REQUEST\r\n    });\r\n\r\n    try {\r\n        const { data } = await axios.get(`/api/items?giver=${giver}&title=${title}&category=${category}`);\r\n        dispatch({ \r\n            type: ITEM_LIST_SUCCESS, \r\n            payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_LIST_FAILURE, \r\n            payload: error.response && error.response.data.message ? \r\n            error.response.data.message : error.message \r\n        });\r\n    }\r\n};\r\n\r\nexport const listItemCategory = () => async (dispatch) => {\r\n    dispatch({\r\n        type: ITEM_CATEGORY_LIST_REQUEST\r\n    });\r\n\r\n    try {\r\n        const { data } = await axios.get(`/api/items/categories`);\r\n        dispatch({ \r\n            type: ITEM_CATEGORY_LIST_SUCCESS, \r\n            payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_CATEGORY_LIST_FAILURE, \r\n            payload: error.response && error.response.data.message ? \r\n            error.response.data.message : error.message \r\n        });\r\n    }\r\n};\r\n\r\nexport const detailItems = (itemId) => async (dispatch) => {\r\n    dispatch({\r\n        type: ITEM_DETAILS_REQUEST, \r\n        payload: itemId\r\n    });\r\n\r\n    try{\r\n        const { data } = await axios.get(`/api/items/${itemId}`);\r\n        dispatch({\r\n            type: ITEM_DETAILS_SUCCESS, \r\n            payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_DETAILS_FAILURE, \r\n            payload: error.response && error.response.data.message ? \r\n                error.response.data.message : error.message \r\n    });\r\n    }\r\n};\r\n\r\nexport const createItem = () => async (dispatch, getState) => {\r\n    dispatch({ \r\n        type: ITEM_CREATE_REQUEST \r\n    });\r\n\r\n    try {\r\n        const { userLogin } = getState();\r\n        const { data } = await axios.post('/api/items', {}, {\r\n            headers: { \r\n                Authorization: `Bearer ${userLogin.userData.token}` },\r\n        });\r\n        dispatch({\r\n            type: ITEM_CREATE_SUCCESS,\r\n            payload: data.item,\r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_CREATE_FAILURE, \r\n            payload: error.response && error.response.data.message ? \r\n            error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateItem = (item) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: ITEM_UPDATE_REQUEST, \r\n        payload: item \r\n    });\r\n\r\n    try {\r\n        const { userLogin } = getState();\r\n        const { data } = await axios.put(`/api/items/${item._id}`, item, {\r\n            headers: { \r\n                Authorization: `Bearer ${userLogin.userData.token}` },\r\n        });\r\n        dispatch({ \r\n            type: ITEM_UPDATE_SUCCESS, \r\n            payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_UPDATE_FAILURE, \r\n            payload: error.response && error.response.data.message ? \r\n            error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteItem = (itemId) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: ITEM_DELETE_REQUEST, \r\n        payload: itemId\r\n    });\r\n\r\n    try {\r\n        const { userLogin } = getState();\r\n        const { data } = await axios.delete(`/api/items/${itemId}`, {\r\n            headers: { \r\n                Authorization: `Bearer ${userLogin.userData.token}` },\r\n        });\r\n        dispatch({ \r\n            type: ITEM_DELETE_SUCCESS, \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_DELETE_FAILURE, \r\n            payload: error.response && error.response.data.message ? \r\n            error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n};","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Constants\\allConstants.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Constants\\AllConstants.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\BasketReducer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\BasketActions.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\UserReducer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\UserActions.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\OrderActions.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\OrderReducer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\ItemReducer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\PrivateRoute.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Showitems.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\AdminRoute.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Styles\\Styled.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Footer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\GiverRoute.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Basket.js",["192"],"import { BreadLi, BreadUl, Breadcrumb, Button, Card, ColContainer, Img, PageTitle, Title } from '../Components/Styles/Styled';\r\nimport { addToBasket, removeFromBasket } from '../Components/Redux/Actions/BasketActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Image = styled(Img)`\r\n    width: 100%;\r\n    max-width: 220px;\r\n    margin: 0;\r\n`;\r\nconst ItemTitle = styled(Title)`\r\n    text-transform: uppercase;\r\n    color: #4b778d;\r\n    \r\n    @media (min-width: 769px) {\r\n        margin: 0 10px;\r\n    }\r\n`;\r\nconst Buttons = styled(Button)`\r\n    color: ${props => props.confirm ? \"#f8ede3\" : \"#ff7171\"};\r\n    background-color: ${props => props.confirm ? \"#28b5b5\" : \"#f8ede3\"};\r\n    margin: ${props => props.confirm ? \"5px 0\" : \"5px 0\"};\r\n    border: ${props => props.confirm ? \"solid 2px #28b5b5\" : \"solid 2px #ff7171\"};\r\n    width: ${props => props.confirm ? \"100%\" : \"100%\"};\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: ${props => props.confirm ? \"#8fd9a8\" : \"#ff7171\"};\r\n        border: ${props => props.confirm ? \"solid 2px #8fd9a8\" : \"solid 2px #ff7171\"};\r\n    }\r\n\r\n    @media (max-width: 770px) {\r\n        display: ${props => props.confirm ? \"\" : \"none\"};\r\n        margin: 10px 0 30px;\r\n        padding: 0.5em 2em;\r\n    }\r\n`;\r\nconst Section = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n\r\n    @media (max-width: 770px) {\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`;\r\nconst SelectedSection = styled.div`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    @media (max-width: 770px) {\r\n        flex-flow: column wrap;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n`;\r\n\r\nexport default function Basket(props) {\r\n    const dispatch = useDispatch();\r\n    const basket = useSelector(state => state.basket);\r\n    const { basketItems, error } = basket;\r\n    const itemId = props.match.params.id;\r\n    const quantity = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\r\n\r\n    const removeFromBasketHandler = (id) => {\r\n        dispatch(removeFromBasket(id));\r\n    };\r\n    const checkOutHandler = () => {\r\n        props.history.push('/login?redirect=shipping');\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(itemId) {\r\n            dispatch(addToBasket(itemId, quantity));\r\n        }\r\n    }, [dispatch, itemId]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ColContainer>\r\n                {error && (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{error}</MessageScreen>\r\n                    </div>\r\n                )}\r\n\r\n                {basketItems.length !== 0 ? (\r\n                    <Breadcrumb>\r\n                        <BreadUl>\r\n                            <Link to='/' style={{color: '#4b778d'}}>\r\n                                <BreadLi>หน้าหลัก</BreadLi>\r\n                            </Link>\r\n                            <BreadLi>/</BreadLi>\r\n                            {basketItems.map(object => (\r\n                                <Link to={`/detail/${object.item}`} style={{color: '#4b778d'}}>\r\n                                    <BreadLi>{object.title}</BreadLi>\r\n                                </Link>\r\n                            ))}\r\n                            <BreadLi>/</BreadLi>\r\n                            <BreadLi>ตะกร้าหนังสือ</BreadLi>\r\n                        </BreadUl>\r\n                    </Breadcrumb>\r\n                ) : null}\r\n                    \r\n                {basketItems.length === 0 ? (\r\n                    <MessageScreen success={false}>\r\n                        ตะกร้าหนังสือยังว่างเปล่าอยู่ รับบริจาคหนังสือซักหน่อยไหม?<br/>\r\n                        <Link \r\n                            to='/'\r\n                            style={{textDecoration: 'none', marginTop: '20px'}}\r\n                        ><Button>ไปหน้าหลัก</Button>\r\n                        </Link>\r\n                    </MessageScreen>\r\n                ) : (\r\n                    \r\n                <>\r\n                    {basketItems.map(object => (\r\n                        <Card width center key={object.item}>\r\n                            <PageTitle>ตะกร้าหนังสือ</PageTitle>\r\n\r\n                            <SelectedSection>\r\n                                <Image src={object.image} alt={object.title} />\r\n\r\n                                <Section>\r\n                                    <ItemTitle>{object.title}</ItemTitle>\r\n                                    <div style={{margin: '0 10px'}}>{object.writer}</div>\r\n                                </Section>\r\n\r\n                                <Section>\r\n                                    <ItemTitle>จำนวน</ItemTitle>\r\n                                    <div style={{margin: '0 40px'}}>{object.quantity}</div>\r\n                                </Section>\r\n                                \r\n                                <div style={{width: '100px'}}>\r\n                                    <Buttons\r\n                                        onClick={() => removeFromBasketHandler(object.item)}\r\n                                    >\r\n                                        ลบ\r\n                                    </Buttons>\r\n                                    <br/>\r\n                                    <Buttons\r\n                                        confirm \r\n                                        disabled={basketItems.length === 0}\r\n                                        onClick={checkOutHandler}\r\n                                    >\r\n                                        ต่อไป\r\n                                    </Buttons>\r\n                                </div>\r\n                            </SelectedSection>\r\n                            <div style={{marginBottom: '30px'}} />\r\n                        </Card>\r\n                    ))}\r\n                </>\r\n\r\n                )}\r\n            </ColContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\ItemDetails.js",["193"],"import { BreadLi, BreadUl, Breadcrumb, Button, ColContainer, ContentSection, DetailCard, ImageSection, Img } from '../Components/Styles/Styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingScreen from '../Components/LoadingScreen';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport React from 'react';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport { detailItems } from '../Components/Redux/Actions/ItemActions';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h2`\r\n    color: #4b778d;\r\n    text-transform: upppercase;\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\nconst Info = styled.p`\r\n    color: #4b778d;\r\n    padding: 0;\r\n    margin: 0;\r\n`;\r\nconst Table = styled.table`\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n`;\r\nconst TD = styled.td`\r\n    text-align: left;\r\n    padding: 10px;\r\n`;\r\nconst TR = styled.tr`\r\n`;\r\nconst LinkTo = styled(Link)`\r\n    color: #4b778d;\r\n    text-decoration: underline;\r\n\r\n    :hover {\r\n        color: #8fd9a8;\r\n    }\r\n`;\r\n\r\nexport default function ItemDetails(props) {\r\n    const dispatch = useDispatch();\r\n    const itemDetails = useSelector(state => state.itemDetails);\r\n    const { loading, error, item } = itemDetails;\r\n    const itemId = props.match.params.id;\r\n\r\n    const addToBasketHandler = () => {\r\n        props.history.push(`/basket/${itemId}`);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dispatch(detailItems(itemId));\r\n    }, [dispatch, itemId]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n                \r\n            <ColContainer>\r\n                {loading ? (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>\r\n                ) : error ? (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{error}</MessageScreen> \r\n                    </div>\r\n                ) : (\r\n                \r\n                <>\r\n                    <Breadcrumb>\r\n                        <BreadUl>\r\n                            <Link to='/' style={{color: '#4b778d'}}>\r\n                                <BreadLi>หน้าหลัก</BreadLi>\r\n                            </Link>\r\n                            <BreadLi>/</BreadLi>\r\n                            <BreadLi>{item.title}</BreadLi>\r\n                        </BreadUl>\r\n                    </Breadcrumb>\r\n\r\n                    <DetailCard>\r\n                        <ImageSection>\r\n                            <Img src={item.image} />\r\n                        </ImageSection>\r\n                        <ContentSection>\r\n                            <Table>\r\n                                <TR>\r\n                                    <TD>\r\n                                        <Title>ชื่อหนังสือ</Title>\r\n                                    </TD>\r\n                                    <TD>\r\n                                        <Title>{item.title}</Title>\r\n                                    </TD>\r\n                                </TR>\r\n                                <TR>\r\n                                    <TD>\r\n                                        <Info>ผู้เขียน</Info>\r\n                                    </TD>\r\n                                    <TD>\r\n                                        <Info>{item.writer}</Info>\r\n                                    </TD>\r\n                                </TR>\r\n                                <TR>\r\n                                    <TD>\r\n                                        <Info>รายละเอียด</Info>\r\n                                    </TD>\r\n                                    <TD>\r\n                                        <Info>{item.description}</Info>\r\n                                    </TD>\r\n                                </TR>\r\n                                <TR>\r\n                                    <TD>\r\n                                        <Info>จำนวน</Info>\r\n                                    </TD>\r\n                                    <TD>\r\n                                        <Info>{item.quantity}</Info>\r\n                                    </TD>\r\n                                </TR>\r\n                                <TR>\r\n                                    <TD>\r\n                                        <Info>ประเภท</Info>\r\n                                    </TD>\r\n                                    <TD>\r\n                                        {item.category.map(cat => (\r\n                                            <Info>{cat.value}</Info>\r\n                                        ))}\r\n                                    </TD>\r\n                                </TR>\r\n                                <TR>\r\n                                    <TD>\r\n                                        <Info>ผู้บริจาค</Info>\r\n                                    </TD>\r\n                                    <TD>\r\n                                        <Info giver>\r\n                                            <LinkTo to={`/giver/${item.giver._id}`}>\r\n                                                {item.giver.giver.username}\r\n                                            </LinkTo>\r\n                                        </Info>\r\n                                    </TD>\r\n                                </TR>\r\n                            </Table>\r\n                            {/* <span>\r\n                                <ReactStars value={item.giver.giver.rating} />\r\n                                <span>{item.giver.giver.numReviews}</span>\r\n                            </span> */}\r\n\r\n                            {item.quantity > 0 && (\r\n                                <Button onClick={addToBasketHandler}>รับ</Button>\r\n                            )}\r\n                        </ContentSection>\r\n                    </DetailCard>\r\n                </>\r\n\r\n            )}\r\n            </ColContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\ItemEdit.js",["194","195"],"import { Card, ColContainer, Form, Input, Label, PageTitle } from '../Components/Styles/Styled'\r\nimport { detailItems, updateItem } from '../Components/Redux/Actions/ItemActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport CategoryList from '../Components/CategoryList';\r\nimport { ITEM_UPDATE_RESET } from '../Components/Redux/Constants/AllConstants';\r\nimport LoadingScreen from '../Components/LoadingScreen';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport React from 'react'\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    cursor: pointer;\r\n    color: #f8ede3;\r\n    background-color: #28b5b5;\r\n    font-size: ${props => props.register ? \"1em\" : \"0.8em\"};\r\n    padding: ${props => props.register ? \"0.5em 2em\" : \"\"};\r\n    margin: ${props => props.register ? \"50px 0 30px\" : \"\"};\r\n    margin-left: ${props => props.register ? \"\" : \"10px\"};\r\n    border: solid 2px #28b5b5;\r\n    width: ${props => props.register ? \"50%\" : \"\"};\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: #8fd9a8;\r\n        border: solid 2px #8fd9a8;\r\n    }\r\n\r\n    @media (max-width: 770px) {\r\n        margin: ${props => props.register ? \"50px 0 30px\" : \"\"};\r\n        padding: ${props => props.register ? \"0.5em 2em;\" : \"\"};\r\n        margin-left: 0;\r\n    }\r\n`;\r\nconst Textarea = styled.textarea`\r\n    font-size: 17px;\r\n    box-sizing: border-box;\r\n    padding: 0.5rem 0.5rem;\r\n    margin: 10px 0;\r\n    border: solid 2px #28b5b5;\r\n    border-radius: 3px;\r\n    width: 100%;\r\n    color: #4b778d;\r\n    background-color: #f8f5f1;\r\n    transition: 0.5s;\r\n\r\n    :focus {\r\n        border: solid 2px #d2e69c;\r\n    }\r\n`;\r\nconst Selector = styled(Select)`\r\n    font-size: 15px;\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n    margin: 10px 0;\r\n    border: solid 2px #28b5b5;\r\n    border-radius: 3px;\r\n    width: 100%;\r\n    color: #4b778d;\r\n    background-color: #f8f5f1;\r\n    transition: 0.5s;\r\n\r\n    :focus {\r\n        border: solid 2px #d2e69c;\r\n    }\r\n`;\r\n\r\nexport default function ItemEdit(props) {\r\n    const [title, setTitle] = React.useState('');\r\n    const [image, setImage] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [category, setCategory] = React.useState([]);\r\n    const [writer, setWriter] = React.useState('');\r\n    const [quantity, setQuantity] = React.useState('');\r\n    const [loadingUpload, setLoadingUpload] = React.useState(false);\r\n    const [errorUpload, setErrorUpload] = React.useState('');\r\n\r\n    const itemDetails = useSelector(state => state.itemDetails);\r\n    const itemUpdate = useSelector(state => state.itemUpdate);\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, item } = itemDetails;\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = itemUpdate;\r\n    const itemId = props.match.params.id;\r\n    const dispatch = useDispatch();\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const Formdata = new FormData();\r\n\r\n        Formdata.append('image', file);\r\n        setLoadingUpload(true);\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/uploads', Formdata, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userLogin.userData.token}`,\r\n                }\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch(error) {\r\n            setErrorUpload(error.message);\r\n            setLoadingUpload(false);\r\n        };\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateItem({\r\n            _id: itemId,\r\n            title,\r\n            image,\r\n            description,\r\n            category,\r\n            writer,\r\n            quantity\r\n        }));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({\r\n                type: ITEM_UPDATE_RESET\r\n            });\r\n            props.history.push('/itemlist');\r\n        }\r\n\r\n        if(!item || item._id !== itemId) {\r\n            dispatch(detailItems(itemId));\r\n        } else {\r\n            setTitle(item.title);\r\n            setImage(item.image);\r\n            setDescription(item.description);\r\n            setCategory(item.category);\r\n            setWriter(item.writer);\r\n            setQuantity(item.quantity);\r\n        }\r\n    }, [item, dispatch, itemId, successUpdate, props.history]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ColContainer>\r\n                {loadingUpdate && (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>)}\r\n                {errorUpdate && (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{errorUpdate}</MessageScreen>\r\n                    </div>)}\r\n\r\n                {loading ? (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen /> \r\n                    </div>) : \r\n                error ? (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{error}</MessageScreen>\r\n                    </div>) : (\r\n\r\n                    <>\r\n                        <PageTitle>แก้ไขข้อมูล {itemId}</PageTitle>\r\n                        <Card width center>\r\n\r\n                            <Form onSubmit={submitHandler}>\r\n                                <div style={{width: '50%'}}>\r\n                                    <Label htmlFor='title'>ชื่อหนังสือ</Label>\r\n                                    <Input \r\n                                        placeholder='กรอกชื่อหนังสือของคุณ' \r\n                                        type='text'\r\n                                        id='title'\r\n                                        value={title}\r\n                                        onChange={(e) => setTitle(e.target.value)}\r\n                                    ></Input>\r\n\r\n                                    <Label htmlFor='description'>รายละเอียด</Label>\r\n                                    <Textarea\r\n                                        rows='5'\r\n                                        placeholder='กรอกรายละเอียดหนังสือของคุณ' \r\n                                        type='text'\r\n                                        id='description'\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    ></Textarea>\r\n\r\n                                    <Label htmlFor='image'>รูปภาพ</Label>\r\n                                    <div style={{border:'solid 2px #28b5b5', padding: '10px', borderRadius: '10px', marginTop: '10px'}}>\r\n                                        <Input\r\n                                            disabled\r\n                                            placeholder='อัปโหลดรูปภาพหนังสือของคุณ' \r\n                                            type='text'\r\n                                            id='image'\r\n                                            value={image}\r\n                                            onChange={(e) => setImage(e.target.value)}\r\n                                            style={{margin: '0'}}\r\n                                        ></Input>\r\n                                        <Input\r\n                                            type='file'\r\n                                            accept='image/*'\r\n                                            id='imageFile'\r\n                                            label='เลือกไฟล์'\r\n                                            onChange={uploadFileHandler}\r\n                                            style={{margin: '0', marginTop: '10px'}}\r\n                                        ></Input>\r\n                                    </div>\r\n                                    \r\n                                    <Label htmlFor='category'>ประเภท</Label>\r\n                                    <Selector\r\n                                        isMulti\r\n                                        id='category'\r\n                                        options={CategoryList}\r\n                                        value={category}\r\n                                        onChange={setCategory}\r\n                                    />\r\n\r\n                                    <Label htmlFor='writer'>ผู้เขียน</Label>\r\n                                    <Input\r\n                                        placeholder='กรอกชื่อผู้เขียนหนังสือของคุณ' \r\n                                        type='text'\r\n                                        id='writer'\r\n                                        value={writer}\r\n                                        onChange={(e) => setWriter(e.target.value)}\r\n                                    ></Input>\r\n\r\n                                    <Label htmlFor='quantity'>จำนวน</Label>\r\n                                    <Input\r\n                                        placeholder='กรอกจำนวนหนังสือของคุณ' \r\n                                        type='text'\r\n                                        id='quantity'\r\n                                        value={quantity}\r\n                                        onChange={(e) => setQuantity(e.target.value)}\r\n                                    ></Input>\r\n                                </div>\r\n\r\n                                <Button register type='submit'>\r\n                                    แก้ไขข้อมูล\r\n                                </Button>\r\n                            </Form>\r\n                        </Card>\r\n                    </>\r\n\r\n                )}\r\n            </ColContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\ItemList.js",["196"],"import { Card, ColContainer, PageTitle, TDGreen, THGreen, TRGreen, TableGreen } from '../Components/Styles/Styled'\r\nimport { ITEM_CREATE_RESET, ITEM_DELETE_RESET } from '../Components/Redux/Constants/AllConstants';\r\nimport { RiAddBoxLine, RiDeleteBin5Line, RiEdit2Line } from 'react-icons/ri';\r\nimport { createItem, deleteItem, listItems } from '../Components/Redux/Actions/ItemActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingScreen from '../Components/LoadingScreen';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    cursor: pointer;\r\n    color: ${props => props.delete ? \"#ff7171\" : \"#f8f5f1\"};\r\n    background-color: ${props => props.delete ? \"#f8ede3\" : \"#ffb037\"};\r\n    padding: 0.5em 2em;\r\n    border: ${props => props.delete ? \"solid 2px #ff7171\" : \"solid 2px #ffb037\"};\r\n    width: 100%;\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: ${props => props.delete ? \"#ff7171\" : \"#ffe268\"};\r\n        border: ${props => props.delete ? \"solid 2px #ff7171\" : \"solid 2px #ffe268\"};\r\n    }\r\n\r\n    @media (max-width: 770px) {\r\n        margin: 50px 0 30px;\r\n        padding: 0.5em 2em;\r\n        margin-left: 0;\r\n    }\r\n`;\r\nconst GotoButton = styled(Button)`\r\n    color: #f8ede3;\r\n    background-color: #28b5b5;\r\n    margin: 5px 0;\r\n    border: solid 2px #28b5b5;\r\n    width: 100%;\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: #8fd9a8;\r\n        border: solid 2px #8fd9a8;\r\n    }\r\n`;\r\nconst AddButton = styled.button`\r\n    cursor: pointer;\r\n    color: #f8ede3;\r\n    background-color: #28b5b5;\r\n    padding: 0.5em 2em;\r\n    margin-bottom: 5px;\r\n    border: solid 2px #28b5b5;\r\n    width: 100%;\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: #8fd9a8;\r\n        border: solid 2px #8fd9a8;\r\n    }\r\n`;\r\n\r\nexport default function ItemList(props) {\r\n    const dispatch = useDispatch();\r\n    const itemList = useSelector(state => state.itemList);\r\n    const itemCreate = useSelector(state => state.itemCreate);\r\n    const itemDelete = useSelector(state => state.itemDelete);\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, items } = itemList;\r\n    const { \r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        item: createdItem\r\n    } = itemCreate;\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete\r\n    } = itemDelete;\r\n    const { userData } = userLogin;\r\n    const giverMode = props.match.path.indexOf('/giver') >= 0;\r\n\r\n    const addHandler = () => {\r\n        dispatch(createItem());\r\n    };\r\n\r\n    const deleteHandler = (item) => {\r\n        if(window.confirm(`ต้องการลบข้อมูล ${item.title} หรือไม่`)) {\r\n            dispatch(deleteItem(item._id));\r\n        };\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(successCreate) {\r\n            dispatch({\r\n                type: ITEM_CREATE_RESET,\r\n            });\r\n            props.history.push(`/detail/${createdItem._id}/edit`);\r\n        }\r\n\r\n        if(successDelete) {\r\n            dispatch({\r\n                type: ITEM_DELETE_RESET,\r\n            });\r\n        }\r\n\r\n        dispatch(listItems({ giver: giverMode ? userData._id : '' }));\r\n    }, [dispatch, createdItem, props.history, successCreate, successDelete]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ColContainer>\r\n                {loadingDelete && (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>)}\r\n\r\n                {errorDelete && (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{errorDelete}</MessageScreen> \r\n                    </div>)}\r\n                \r\n                {loadingCreate && (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>)}\r\n\r\n                {errorCreate && (\r\n                    <div style={{padding: '10px 10px 30px'}}>\r\n                        <MessageScreen success={false}>{errorCreate}</MessageScreen> \r\n                    </div>)}\r\n\r\n                {loading ? (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>\r\n                ) : error ? (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{error}</MessageScreen> \r\n                    </div>\r\n                ) : (\r\n\r\n                    <>\r\n                        {userData.haveUsername === false ? (\r\n                            <div style={{padding: '10px 10px 30px'}}>\r\n                                <MessageScreen success={false}>\r\n                                    กรุณาสร้างชื่อผู้ใช้ก่อน\r\n                                    <Link \r\n                                        to='/profile'\r\n                                        style={{textDecoration: 'none', marginTop: '20px'}}\r\n                                    ><GotoButton confirm>สร้างชื่อผู้ใช้</GotoButton>\r\n                                    </Link>\r\n                                </MessageScreen> \r\n                            </div>\r\n                        ) : (\r\n                            \r\n                            <Card width center>\r\n                                <PageTitle>รายการหนังสือ</PageTitle>\r\n                                <div>\r\n                                    <AddButton onClick={addHandler}><RiAddBoxLine /></AddButton>\r\n                                </div>\r\n                                <div>\r\n                                    <TableGreen>\r\n                                        <thead>\r\n                                            <TRGreen>\r\n                                                <THGreen>รหัสหนังสือ</THGreen>\r\n                                                <THGreen>ชื่อจริงและชื่อสกุล</THGreen>\r\n                                                <THGreen>ชื่อหนังสือ</THGreen>\r\n                                                <THGreen>จำนวน</THGreen>\r\n                                                <THGreen>ประเภท</THGreen>\r\n                                                <THGreen>อื่น ๆ</THGreen>\r\n                                            </TRGreen>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {items.map(item => (\r\n                                                <TRGreen key={item._id}>\r\n                                                    <TDGreen>{item._id}</TDGreen>\r\n                                                    <TDGreen>{item.giver.giver.username}</TDGreen>\r\n                                                    <TDGreen>{item.title}</TDGreen>\r\n                                                    <TDGreen>{item.quantity}</TDGreen>\r\n                                                    <TDGreen>\r\n                                                        {item.category.length >= 2 ? `${item.category.length} ประเภท` : (\r\n                                                            item.category.map(cat => (\r\n                                                                <p>{cat.value}</p>\r\n                                                            ))\r\n                                                        )}\r\n                                                    </TDGreen>\r\n                                                    <TDGreen>\r\n                                                        <div style={{display: 'flex'}}>\r\n                                                            <Button\r\n                                                                style={{ marginRight: '5px' }}\r\n                                                                onClick={() => {props.history.push(`/detail/${item._id}/edit`)}}\r\n                                                            ><RiEdit2Line /></Button>\r\n                                                            <Button\r\n                                                                delete\r\n                                                                onClick={() => deleteHandler(item)}\r\n                                                            ><RiDeleteBin5Line /></Button>\r\n                                                        </div>\r\n                                                    </TDGreen>\r\n                                                </TRGreen>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </TableGreen>\r\n                                </div>\r\n                            </Card>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </ColContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Login.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\OrderHistory.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\OrderList.js",["197","198"],"import { Card, ColContainer, PageTitle, TD, TDGreen, THGreen, TRGreen, TableGreen } from '../Components/Styles/Styled'\r\nimport { deleteOrder, listOrders } from '../Components/Redux/Actions/OrderActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { BiDetail } from 'react-icons/bi'\r\nimport LoadingScreen from '../Components/LoadingScreen';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport { ORDER_DELETE_RESET } from '../Components/Redux/Constants/AllConstants';\r\nimport React from 'react';\r\nimport { RiDeleteBin5Line } from 'react-icons/ri';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n    cursor: pointer;\r\n    color: ${props => props.delete ? \"#ff7171\" : \"#f8f5f1\"};\r\n    background-color: ${props => props.delete ? \"#f8ede3\" : \"#28b5b5\"};\r\n    padding: 0.5em 2em;\r\n    border: ${props => props.delete ? \"solid 2px #ff7171\" : \"solid 2px #28b5b5\"};\r\n    width: 100%;\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: ${props => props.delete ? \"#ff7171\" : \"#8fd9a8\"};\r\n        border: ${props => props.delete ? \"solid 2px #ff7171\" : \"solid 2px #8fd9a8\"};\r\n    }\r\n\r\n    @media (max-width: 770px) {\r\n        margin: 50px 0 30px;\r\n        padding: 0.5em 2em;\r\n        margin-left: 0;\r\n    }\r\n`;\r\n\r\nexport default function OrderList(props) {\r\n    const dispatch = useDispatch();\r\n    const orderList = useSelector(state => state.orderList);\r\n    const orderDelete = useSelector(state => state.orderDelete);\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, orders } = orderList;\r\n    const { \r\n        loading: loadingDelete, \r\n        error: errorDelete, \r\n        success: successDelete \r\n    } = orderDelete;\r\n    const { userData } = userLogin;\r\n    const giverMode = props.match.path.indexOf('/giver') >= 0;\r\n\r\n    const deleteHandler = (order) => {\r\n        if(window.confirm(`ต้องการลบรายการ \"${order._id}\" นี้หรือไม่?`)) {\r\n            dispatch(deleteOrder(order._id));\r\n        };\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        dispatch(listOrders({ giver: giverMode ? userData._id : '' }));\r\n        dispatch({\r\n            type: ORDER_DELETE_RESET,\r\n        });\r\n    }, [dispatch, successDelete]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <ColContainer>\r\n                {loadingDelete && (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>)}\r\n\r\n                {errorDelete && (\r\n                    <div style={{padding: '10px 10px 30px'}}>\r\n                        <MessageScreen success={false}>{errorDelete}</MessageScreen> \r\n                    </div>)}\r\n\r\n                {loading ? (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>\r\n                ) : error ? (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{error}</MessageScreen> \r\n                    </div>\r\n                ) : (\r\n\r\n                    <Card width center>\r\n                        <PageTitle>รายการบริจาค</PageTitle>\r\n                        <div>\r\n                            <TableGreen>\r\n                                <thead>\r\n                                    <TRGreen>\r\n                                        <THGreen>หมายเลขรายการ</THGreen>\r\n                                        <THGreen>ชื่อผู้รับบริจาค</THGreen>\r\n                                        <THGreen>วันที่รับบริจาค</THGreen>\r\n                                        <THGreen>วิธีการชำระเงิน</THGreen>\r\n                                        <THGreen>สถานะการขนส่ง</THGreen>\r\n                                        <THGreen>อื่น ๆ</THGreen>\r\n                                    </TRGreen>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <TRGreen key={order._id}>\r\n                                            <TD>{order._id}</TD>\r\n                                            <TD>{order.shippingAddress.fullname}</TD>\r\n                                            <TD>{order.createdAt.substring(0, 10)}</TD>\r\n                                            <TD>{order.paymentMethod}</TD>\r\n                                            <TD>{order.isDelivered ? order.deliveredAt.substring(0, 10) : 'รอ'}</TD>\r\n                                            <TD>\r\n                                                <div style={{display: 'flex'}}>\r\n                                                    <Button\r\n                                                        style={{ marginRight: '5px' }}\r\n                                                        onClick={() => {props.history.push(`/order/${order._id}`)}}\r\n                                                    ><BiDetail /></Button>\r\n                                                    {userData.isAdmin && (\r\n                                                        <Button\r\n                                                        delete\r\n                                                        onClick={() => deleteHandler(order)}\r\n                                                        ><RiDeleteBin5Line /></Button>\r\n                                                    )}\r\n                                                </div>\r\n                                            </TD>\r\n                                        </TRGreen>\r\n                                    ))}\r\n                                </tbody>\r\n                            </TableGreen>\r\n                        </div>\r\n                    </Card>\r\n\r\n                )}\r\n            </ColContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\OrderOverview.js",["199","200","201","202"],"import { BreadLi, BreadUl, Breadcrumb, Button, Card, ColContainer, Img, Info, PageTitle, TD, TR, Table, Title } from '../Components/Styles/Styled'\r\nimport { deliverOrder, detailsOrder } from '../Components/Redux/Actions/OrderActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport LoadingScreen from '../Components/LoadingScreen';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport { ORDER_DELIVER_RESET } from '../Components/Redux/Constants/AllConstants';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: space-evenly;\r\n    width: 100%;\r\n`;\r\nconst Zoning = styled.div`\r\n    margin: 0 0 10px;\r\n    padding: 10px;\r\n    transition: 0.5s;\r\n    border: 1px solid #28b5b5;\r\n\r\n    :hover {\r\n        box-shadow: rgba(17, 12, 46, 0.15) 0px 48px 100px 0px;\r\n        background-color: #f8ede3;\r\n    }\r\n`;\r\nconst ZoneTitle = styled.h3`\r\n    cursor: default;\r\n    color: #4b778d;\r\n    text-align: center\r\n`;\r\nconst ZoneDetail = styled.p`\r\n    cursor: default;\r\n    color: #4b778d;\r\n    margin: 0 0 10px;\r\n`;\r\nconst OrderIdTitle = styled.span`\r\n    margin: 10px 0 30px;\r\n    color: #28b5b5;\r\n`;\r\nconst ZoneImage = styled.div`\r\n    display: grid;\r\n    grid: 350px / auto 620px;\r\n`;\r\nconst Image = styled(Img)`\r\n    max-width: 200px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n`;\r\n\r\nexport default function OrderOverview(props) {\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { userData } = userLogin;\r\n    const { loading, error, order } = orderDetails\r\n    const { \r\n        loading: loadingDeliver, \r\n        error: errorDeliver, \r\n        success: successDeliver  \r\n    } = orderDeliver;\r\n    const orderId = props.match.params.id;\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order._id));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(!order || successDeliver || (order && order._id !== orderId))  {\r\n            dispatch(detailsOrder(orderId));\r\n            dispatch({\r\n                type: ORDER_DELIVER_RESET\r\n            });\r\n        }\r\n    }, [dispatch, orderId, successDeliver]);\r\n\r\n    return loading ? (\r\n        <div style={{margin: '10px 0 30px'}}>\r\n            <LoadingScreen />\r\n        </div>) :\r\n        error ? (\r\n            <div style={{margin: '10px 0 30px'}}>\r\n                <MessageScreen success={false}>{error}</MessageScreen>\r\n            </div>) :\r\n        (\r\n            <React.Fragment>\r\n\r\n                <ColContainer>\r\n\r\n                    {loadingDeliver && (\r\n                        <div style={{margin: '10px 0 30px'}}>\r\n                            <LoadingScreen />\r\n                        </div>)}\r\n\r\n                    {errorDeliver && (\r\n                        <div style={{padding: '10px 0 30px'}}>\r\n                            <MessageScreen success={false}>{errorDeliver}</MessageScreen> \r\n                        </div>)}\r\n\r\n                    <Card width center>\r\n                        <PageTitle>รายละเอียดการรับบริจาค</PageTitle>\r\n                        <OrderIdTitle><strong>หมายเลขรายการ : {order._id}</strong></OrderIdTitle>\r\n                        \r\n                        <Section>\r\n                            {order.isDelivered ? (\r\n                                <Zoning>\r\n                                    <ZoneDetail style={{margin: 0}}>\r\n                                        <strong>สถานะการขนส่ง : </strong>พัสดุได้รับการจัดส่งแล้ว {order.deliveredAt}\r\n                                    </ZoneDetail>\r\n                                </Zoning> ) : (\r\n                                <Zoning>\r\n                                    <ZoneDetail style={{margin: 0}}>\r\n                                        <strong>สถานะการขนส่ง : </strong>พัสดุอยู่ระหว่างการขนส่ง\r\n                                    </ZoneDetail>\r\n                                </Zoning>\r\n                            )}\r\n                            <Zoning>\r\n                                <ZoneTitle>ที่อยู่ในการจัดส่ง</ZoneTitle>\r\n                                <ZoneDetail><strong>ชื่อผู้รับ : </strong>{order.shippingAddress.fullname}</ZoneDetail>\r\n                                <ZoneDetail><strong>เบอร์โทรศัพท์ : </strong>{order.shippingAddress.phoneNumber}</ZoneDetail>\r\n                                <ZoneDetail><strong>ที่อยู่ : </strong>{order.shippingAddress.address} อำเภอ {order.shippingAddress.district}\r\n                                    จังหวัด {order.shippingAddress.province} รหัสไปรษณีย์ {order.shippingAddress.postal}\r\n                                </ZoneDetail>\r\n                            </Zoning>\r\n\r\n                            <Zoning>\r\n                                <ZoneTitle>ชำระเงิน</ZoneTitle>\r\n                                <ZoneDetail><strong>วิธีการชำระเงิน : </strong>{order.paymentMethod}</ZoneDetail>\r\n                            </Zoning>\r\n\r\n                            <Zoning>\r\n                                <ZoneTitle>หนังสือที่รับบริจาค</ZoneTitle>\r\n                                {order.orderItems.map(item => (\r\n                                <ZoneImage key={item._id}>\r\n                                    <Image src={item.image} alt={item.title} />\r\n                                    <div>\r\n                                        <Table>\r\n                                            <TR>\r\n                                                <TD>\r\n                                                    <Title>ชื่อหนังสือ</Title>\r\n                                                </TD>\r\n                                                <TD>\r\n                                                    <Title>{item.title}</Title>\r\n                                                </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD>\r\n                                                    <Info>ผู้เขียน</Info>\r\n                                                </TD>\r\n                                                <TD>\r\n                                                    <Info>{item.writer}</Info>\r\n                                                </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD>\r\n                                                    <Info>จำนวน</Info>\r\n                                                </TD>\r\n                                                <TD>\r\n                                                    <Info>{item.quantity}</Info>\r\n                                                </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD>\r\n                                                    <Info>ประเภท</Info>\r\n                                                </TD>\r\n                                                <TD>\r\n                                                    {item.category.map(cat => (\r\n                                                        <Info>{cat.value}</Info>\r\n                                                    ))}\r\n                                                </TD>\r\n                                            </TR>\r\n                                        </Table>\r\n                                    </div>\r\n                                </ZoneImage>\r\n                                ))}\r\n                            </Zoning>\r\n                        </Section>\r\n                        {userData.isAdmin && !order.isDelivered ? (\r\n                            <Button \r\n                                order\r\n                                onClick={deliverHandler}\r\n                                disabled={order.orderItems.length === 0}\r\n                            >นำส่ง</Button>\r\n                        ) : userData.isReceiver ? null : null}\r\n\r\n                    </Card>\r\n                </ColContainer>\r\n                \r\n            </React.Fragment>\r\n    )\r\n}","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Overview.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Payment.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Profile.js",["203","204","205"],"import { Button, Card, ColContainer, Form, Input, Label, PageTitle } from '../Components/Styles/Styled';\r\nimport { detailsUser, updateUserProfile } from '../Components/Redux/Actions/UserActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport LoadingScreen from '../Components/LoadingScreen';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport React from 'react';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../Components/Redux/Constants/AllConstants';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst Buttons = styled(Button)`\r\n    width: 50%;\r\n    margin: 30px 0 50px;\r\n`;\r\nconst Textarea = styled.textarea`\r\n    font-size: 17px;\r\n    box-sizing: border-box;\r\n    padding: 0.5rem 0.5rem;\r\n    margin: 10px 0;\r\n    border: solid 2px #28b5b5;\r\n    border-radius: 3px;\r\n    width: 100%;\r\n    resize: vertical;\r\n    color: #4b778d;\r\n    background-color: #f8f5f1;\r\n    transition: 0.5s;\r\n\r\n    :focus {\r\n        border: solid 2px #d2e69c;\r\n    }\r\n`;\r\n\r\nexport default function Profile() {\r\n    const [fullname, setFullname] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [confirmPassword, setConfirmPassword] = React.useState('');\r\n    const [giverUsername, setGiverUsername] = React.useState('');\r\n    const [giverLogo, setGiverLogo] = React.useState('');\r\n    const [giverDescription, setGiverDescription] = React.useState('');\r\n    const [haveUsername, setHaveUsername] = React.useState(false);\r\n    const [loadingUpload, setLoadingUpload] = React.useState(false);\r\n    const [errorUpload, setErrorUpload] = React.useState('');\r\n    const [image, setImage] = React.useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const userProfileUpdate = useSelector(state => state.userProfileUpdate);\r\n    const { userData } = userLogin;\r\n    const { loading, error, user } = userDetails;\r\n    const { success: successUpdate, error: errorUpdate, loading: loadingUpdate, } = userProfileUpdate;\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const Formdata = new FormData();\r\n\r\n        Formdata.append('image', file);\r\n        setLoadingUpload(true);\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/uploads', Formdata, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userData.token}`,\r\n                }\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch(error) {\r\n            setErrorUpload(error.message);\r\n            setLoadingUpload(false);\r\n        }\r\n    };\r\n\r\n    const usernameCheck = (e) => {\r\n        setGiverUsername(e.target.value);\r\n        setHaveUsername(true);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(password !== confirmPassword) {\r\n            alert('รหัสทั้งสองไม่ตรงกัน กรุณาตรวจสอบอีกครั้ง');\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                userId: user._id,\r\n                fullname,\r\n                email,\r\n                password,\r\n                giverUsername,\r\n                giverLogo,\r\n                giverDescription,\r\n                haveUsername,\r\n            }));\r\n        };\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(!user) {\r\n            dispatch({\r\n                type: USER_UPDATE_PROFILE_RESET\r\n            });\r\n            dispatch(detailsUser(userData._id));\r\n        } else {\r\n            setFullname(user.fullname);\r\n            setEmail(user.email);\r\n            setHaveUsername(user.haveUsername);\r\n            if(user.giver) {\r\n                setGiverUsername(user.giver.username);\r\n                setGiverLogo(user.giver.logo);\r\n                setGiverDescription(user.giver.description);\r\n            }\r\n        }\r\n    }, [dispatch, userData._id, user]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ColContainer>\r\n                {loadingUpdate && (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>)}\r\n                    \r\n                {errorUpdate && (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{errorUpdate}</MessageScreen>\r\n                    </div>)}\r\n\r\n                {successUpdate && (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <MessageScreen success={true}>แก้ไขข้อมูลเสร็จสิ้น</MessageScreen> \r\n                    </div>)}\r\n\r\n                {loading ? (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>\r\n                ) : error ? (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{error}</MessageScreen> \r\n                    </div>\r\n                ) : (\r\n\r\n                    <Card width center>\r\n                        <PageTitle>แก้ไขข้อมูลส่วนตัว</PageTitle>\r\n                        <Form onSubmit={submitHandler}>\r\n                            <div style={{width: '50%'}}>\r\n                                <Label htmlFor='fullname'>ชื่อจริงและชื่อสกุล</Label>\r\n                                <Input \r\n                                    placeholder='กรอกชื่อจริงและชื่อสกุลของคุณ' \r\n                                    type='text'\r\n                                    id='fullname'\r\n                                    value={fullname}\r\n                                    onChange={(e) => setFullname(e.target.value)}\r\n                                ></Input>\r\n\r\n                                <Label htmlFor='email'>อีเมล</Label>\r\n                                <Input \r\n                                    require\r\n                                    placeholder='กรอกอีเมลของคุณ' \r\n                                    type='email'\r\n                                    id='email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                ></Input>\r\n                                \r\n                                <Label htmlFor='password'>รหัสผ่าน</Label>\r\n                                <Input \r\n                                    placeholder='กรอกรหัสผ่านของคุณ' \r\n                                    type='password'\r\n                                    id='password'\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                ></Input>\r\n\r\n                                <Label htmlFor='confirm-password'>ยืนยันรหัสผ่าน</Label>\r\n                                <Input \r\n                                    placeholder='กรอกรหัสผ่านของคุณอีกครั้ง' \r\n                                    type='password'\r\n                                    id='confirm-password'\r\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                ></Input>\r\n                                {userData.isGiver && (\r\n                                    <>\r\n                                        <Label>ผู้บริจาค</Label>\r\n                                        <div style={{border:'solid 2px #28b5b5', padding: '10px', borderRadius: '10px', marginTop: '10px'}}>\r\n                                            <Label htmlFor='giverUsername'>ชื่อผู้ใช้</Label>\r\n                                            <Input \r\n                                                placeholder='กรอกชื่อในการบริจาคของคุณ' \r\n                                                type='text'\r\n                                                id='giverUsername'\r\n                                                value={giverUsername}\r\n                                                onChange={(e) => usernameCheck(e)}\r\n                                            ></Input>\r\n\r\n                                            <Label htmlFor='image'>โลโก้</Label>\r\n                                            <Input\r\n                                                disabled\r\n                                                placeholder='อัปโหลดรูปภาพ'\r\n                                                type='text'\r\n                                                id='image'\r\n                                                value={image}\r\n                                                onChange={(e) => setImage(e.target.value)}\r\n                                                style={{margin: '0'}}\r\n                                            ></Input>\r\n                                            <Input \r\n                                                type='file'\r\n                                                accept='image/*'\r\n                                                id='imageFile'\r\n                                                label='เลือกไฟล์'\r\n                                                onChange={uploadFileHandler}\r\n                                                style={{margin: '0', margin: '10px 0'}}\r\n                                            ></Input>\r\n\r\n                                            <Label htmlFor='giverDescription'>รายละเอียดผู้บริจาค</Label>\r\n                                            <Textarea\r\n                                                rows='5'\r\n                                                placeholder='กรอกรายละเอียดผู้บริจาค' \r\n                                                type='text'\r\n                                                id='giverDescription'\r\n                                                value={giverDescription}\r\n                                                onChange={(e) => setGiverDescription(e.target.value)}\r\n                                            ></Textarea>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n\r\n                            <Buttons type=\"submit\">\r\n                                แก้ไข\r\n                            </Buttons>\r\n                        </Form>\r\n                    </Card>\r\n\r\n                )}\r\n            </ColContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\UserEdit.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\UserList.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Giver.js",["206","207","208","209"],"import { BreadLi, BreadUl, Breadcrumb, ColContainer, DetailCard, ImageSection, Img, PageTitle, RowContainer } from '../Components/Styles/Styled'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Item from '../Components/Item';\r\nimport LoadingScreen from '../Components/LoadingScreen';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport React from 'react';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport { detailsUser } from '../Components/Redux/Actions/UserActions';\r\nimport { listItems } from '../Components/Redux/Actions/ItemActions';\r\nimport styled from 'styled-components';\r\n\r\nconst DetailSection = styled.div`\r\n    grid-area: 1 / 1 / 2 / 2;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 15px;\r\n`;\r\nconst Description = styled.div`\r\n    width: auto;\r\n    height: auto;\r\n    max-height: 200px;\r\n    overflow: scroll;\r\n`;\r\nconst ItemsSection = styled.div`\r\n    padding: 15px;\r\n`;\r\nconst ShowItem = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: scroll;\r\n    background-color: #f8f5f1;\r\n`;\r\n\r\nexport default function Giver(props) {\r\n    const dispatch = useDispatch();\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const itemList = useSelector(state => state.itemList);\r\n    const { loading, error, user } = userDetails;\r\n    const { loading: loadingList, error: errorList, items } = itemList;\r\n    const giverId = props.match.params.id;\r\n\r\n    React.useEffect(() => {\r\n        dispatch(detailsUser(giverId));\r\n        dispatch(listItems({\r\n            giver: giverId,\r\n        }));\r\n    }, [dispatch, giverId]);\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <ColContainer>\r\n                {loading ? (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>\r\n                ) : error ? (\r\n                    <div style={{padding: '10px 0 30px'}}>\r\n                        <MessageScreen success={false}>{error}</MessageScreen> \r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <DetailCard giver>\r\n                            <DetailSection>\r\n                                <PageTitle>{user.giver.username}</PageTitle>\r\n                                <ImageSection>\r\n                                    <Img src={user.giver.logo} alt={user.giver.username} />\r\n                                </ImageSection>\r\n\r\n                                <ReactStars \r\n                                    value={user.giver.rating} \r\n                                    size={30}\r\n                                />\r\n\r\n                                <div>\r\n                                    <a href={`mailto:${user.email}`}>ติดต่อผู้บริจาค (อีเมล)</a>\r\n                                    <Description>{user.giver.description}</Description>\r\n                                </div>\r\n                            </DetailSection>\r\n\r\n                            <ItemsSection>\r\n                                {loadingList ? (\r\n                                    <LoadingScreen />\r\n                                ) : errorList ? (\r\n                                    <MessageScreen success={false}>{errorList}</MessageScreen>\r\n                                ) : (\r\n                                    <>\r\n                                        {items === 0 && (\r\n                                            <MessageScreen success={false}>ไม่พบหนังสือ</MessageScreen>\r\n                                        )}\r\n                                        <ShowItem>\r\n                                            {items.map((object) => (\r\n                                                <Item key={object._id} object={object} />\r\n                                            ))}\r\n                                        </ShowItem>\r\n                                    </>\r\n                                )}\r\n                            </ItemsSection>\r\n                        </DetailCard>\r\n                    </>\r\n                )}\r\n            </ColContainer>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Shipping.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\Register.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Searchbox.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Screens\\SearchResult.js",["210","211","212","213","214"],"import { PageTitle, RowContainer, Wrapper } from '../Components/Styles/Styled';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Item from '../Components/Item';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingScreen from '../Components/LoadingScreen';\r\nimport MessageScreen from '../Components/MessageScreen';\r\nimport React from 'react';\r\nimport { listItems } from '../Components/Redux/Actions/ItemActions';\r\nimport styled from 'styled-components';\r\nimport { useParams } from 'react-router';\r\n\r\nconst PageTitles = styled(PageTitle)`\r\n    text-align: center;\r\n    background-color: #f8f5f1;\r\n    margin: 0;\r\n    padding: 15px 0 0;\r\n`;\r\nconst DetailSection = styled.div`\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    background-color: #f8ede3;\r\n    padding: 0 20px;\r\n`;\r\nconst Detail = styled.h3`\r\n    color: #4b778d;\r\n`;\r\n\r\nexport default function SearchResult() {\r\n    const dispatch = useDispatch();\r\n    const itemList = useSelector(state => state.itemList);\r\n    const itemCategory = useSelector(state => state.itemCategory);\r\n    const { loading, error, items } = itemList;\r\n    const {\r\n        loading: loadingCategory, \r\n        error: errorCategory, \r\n        categories \r\n    } = itemCategory;\r\n    const { title = 'all', category = 'all' } = useParams();\r\n\r\n    const getFilterUrl = (filter) => {\r\n        const filterCategory = filter.category || category;\r\n        const filterTitle = filter.title || title;\r\n        return `/search/category/${filterCategory}/title/${filterTitle}`;\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        dispatch(listItems({\r\n            title: title !== 'all' ? title : '',\r\n            category: category !== 'all' ? category : ''\r\n        }));\r\n    }, [dispatch, title, category]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {loading ? (\r\n                <Wrapper>\r\n                    <LoadingScreen />\r\n                </Wrapper>) :\r\n            error ? (\r\n                <Wrapper>\r\n                    <MessageScreen success={false}>{error}</MessageScreen>\r\n                </Wrapper>) : \r\n            (\r\n                <>\r\n                    <PageTitles>ผลการค้นหา</PageTitles>\r\n                    <DetailSection>\r\n                        <Detail>พบหนังสือจำนวน {items.length} เล่ม</Detail>\r\n                    </DetailSection>\r\n\r\n                    <RowContainer>\r\n                        {items.map(object => (\r\n                            <Item key={object._id} object={object} />\r\n                        ))}\r\n                    </RowContainer>\r\n                </>\r\n            )}\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\CategoryList.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":5,"column":5,"nodeType":"221","messageId":"222","endLine":5,"endColumn":20},{"ruleId":"219","severity":1,"message":"223","line":16,"column":19,"nodeType":"221","messageId":"222","endLine":16,"endColumn":27},{"ruleId":"219","severity":1,"message":"224","line":144,"column":17,"nodeType":"221","messageId":"222","endLine":144,"endColumn":21},{"ruleId":"225","severity":1,"message":"226","line":83,"column":8,"nodeType":"227","endLine":83,"endColumn":26,"suggestions":"228"},{"ruleId":"219","severity":1,"message":"229","line":8,"column":8,"nodeType":"221","messageId":"222","endLine":8,"endColumn":18},{"ruleId":"219","severity":1,"message":"230","line":78,"column":12,"nodeType":"221","messageId":"222","endLine":78,"endColumn":25},{"ruleId":"219","severity":1,"message":"231","line":79,"column":12,"nodeType":"221","messageId":"222","endLine":79,"endColumn":23},{"ruleId":"225","severity":1,"message":"232","line":111,"column":8,"nodeType":"227","endLine":111,"endColumn":76,"suggestions":"233"},{"ruleId":"219","severity":1,"message":"234","line":1,"column":45,"nodeType":"221","messageId":"222","endLine":1,"endColumn":52},{"ruleId":"225","severity":1,"message":"232","line":60,"column":8,"nodeType":"227","endLine":60,"endColumn":33,"suggestions":"235"},{"ruleId":"219","severity":1,"message":"236","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":17},{"ruleId":"219","severity":1,"message":"237","line":1,"column":19,"nodeType":"221","messageId":"222","endLine":1,"endColumn":26},{"ruleId":"219","severity":1,"message":"238","line":1,"column":28,"nodeType":"221","messageId":"222","endLine":1,"endColumn":38},{"ruleId":"225","severity":1,"message":"239","line":77,"column":8,"nodeType":"227","endLine":77,"endColumn":43,"suggestions":"240"},{"ruleId":"219","severity":1,"message":"230","line":43,"column":12,"nodeType":"221","messageId":"222","endLine":43,"endColumn":25},{"ruleId":"219","severity":1,"message":"231","line":44,"column":12,"nodeType":"221","messageId":"222","endLine":44,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":215,"column":70,"nodeType":"243","messageId":"244","endLine":215,"endColumn":76},{"ruleId":"219","severity":1,"message":"236","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":17},{"ruleId":"219","severity":1,"message":"237","line":1,"column":19,"nodeType":"221","messageId":"222","endLine":1,"endColumn":26},{"ruleId":"219","severity":1,"message":"238","line":1,"column":28,"nodeType":"221","messageId":"222","endLine":1,"endColumn":38},{"ruleId":"219","severity":1,"message":"245","line":1,"column":96,"nodeType":"221","messageId":"222","endLine":1,"endColumn":108},{"ruleId":"219","severity":1,"message":"246","line":5,"column":10,"nodeType":"221","messageId":"222","endLine":5,"endColumn":14},{"ruleId":"219","severity":1,"message":"247","line":36,"column":18,"nodeType":"221","messageId":"222","endLine":36,"endColumn":33},{"ruleId":"219","severity":1,"message":"248","line":37,"column":16,"nodeType":"221","messageId":"222","endLine":37,"endColumn":29},{"ruleId":"219","severity":1,"message":"249","line":38,"column":9,"nodeType":"221","messageId":"222","endLine":38,"endColumn":19},{"ruleId":"219","severity":1,"message":"250","line":42,"column":11,"nodeType":"221","messageId":"222","endLine":42,"endColumn":23},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'RiDashboardLine' is defined but never used.","Identifier","unusedVar","'setColor' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'quantity'. Either include it or remove the dependency array.","ArrayExpression",["253"],"'ReactStars' is defined but never used.","'loadingUpload' is assigned a value but never used.","'errorUpload' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'giverMode' and 'userData._id'. Either include them or remove the dependency array.",["254"],"'TDGreen' is defined but never used.",["255"],"'BreadLi' is defined but never used.","'BreadUl' is defined but never used.","'Breadcrumb' is defined but never used.","React Hook React.useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.",["256"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'RowContainer' is defined but never used.","'Link' is defined but never used.","'loadingCategory' is assigned a value but never used.","'errorCategory' is assigned a value but never used.","'categories' is assigned a value but never used.","'getFilterUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [dispatch, itemId, quantity]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, createdItem, props.history, successCreate, successDelete, giverMode, userData._id]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, giverMode, successDelete, userData._id]",{"range":"269","text":"270"},"Update the dependencies array to be: [dispatch, order, orderId, successDeliver]",{"range":"271","text":"272"},[2588,2606],"[dispatch, itemId, quantity]",[3465,3533],"[dispatch, createdItem, props.history, successCreate, successDelete, giverMode, userData._id]",[2233,2258],"[dispatch, giverMode, successDelete, userData._id]",[2327,2362],"[dispatch, order, orderId, successDeliver]"]