[{"D:\\Works\\Mich\\scharerity\\Frontend\\src\\index.js":"1","D:\\Works\\Mich\\scharerity\\Frontend\\src\\App.js":"2","D:\\Works\\Mich\\scharerity\\Frontend\\src\\reportWebVitals.js":"3","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Navbar.js":"4","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Item.js":"5","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Basket.js":"6","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Footer.js":"7","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\LoadingScreen.js":"8","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\MessageScreen.js":"9","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Store.js":"10","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\ItemActions.js":"11","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Constants\\allConstants.js":"12","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Constants\\AllConstants.js":"13","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\BasketReducer.js":"14","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\BasketActions.js":"15","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Login.js":"16","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Register.js":"17","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\UserReducer.js":"18","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\UserActions.js":"19","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Shipping.js":"20","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Payment.js":"21","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Overview.js":"22","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\OrderActions.js":"23","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\OrderReducer.js":"24","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\OrderOverview.js":"25","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\OrderHistory.js":"26","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Profile.js":"27","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\ItemReducer.js":"28","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\PrivateRoute.js":"29","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Showitems.js":"30","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\AdminRoute.js":"31","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\ItemList.js":"32","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\ItemDetails.js":"33","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\ItemEdit.js":"34","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\OrderList.js":"35"},{"size":634,"mtime":1618334788755,"results":"36","hashOfConfig":"37"},{"size":2042,"mtime":1618870992671,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1618221251277,"results":"39","hashOfConfig":"37"},{"size":11771,"mtime":1618871817953,"results":"40","hashOfConfig":"37"},{"size":3256,"mtime":1618943915535,"results":"41","hashOfConfig":"37"},{"size":7648,"mtime":1618945729299,"results":"42","hashOfConfig":"37"},{"size":388,"mtime":1618306815375,"results":"43","hashOfConfig":"37"},{"size":623,"mtime":1618864138843,"results":"44","hashOfConfig":"37"},{"size":1025,"mtime":1618929156157,"results":"45","hashOfConfig":"37"},{"size":2079,"mtime":1618928503917,"results":"46","hashOfConfig":"37"},{"size":3640,"mtime":1618864836026,"results":"47","hashOfConfig":"37"},{"size":452,"mtime":1618432920160,"results":"48","hashOfConfig":"37"},{"size":3532,"mtime":1618927676264,"results":"49","hashOfConfig":"37"},{"size":1569,"mtime":1618692183100,"results":"50","hashOfConfig":"37"},{"size":1318,"mtime":1618680823823,"results":"51","hashOfConfig":"37"},{"size":5797,"mtime":1618945211339,"results":"52","hashOfConfig":"37"},{"size":7375,"mtime":1618847010497,"results":"53","hashOfConfig":"37"},{"size":2702,"mtime":1618774922889,"results":"54","hashOfConfig":"37"},{"size":3848,"mtime":1618769701436,"results":"55","hashOfConfig":"37"},{"size":7370,"mtime":1618687105360,"results":"56","hashOfConfig":"37"},{"size":4580,"mtime":1618740041679,"results":"57","hashOfConfig":"37"},{"size":5814,"mtime":1618942587795,"results":"58","hashOfConfig":"37"},{"size":5349,"mtime":1618929277603,"results":"59","hashOfConfig":"37"},{"size":4164,"mtime":1618928411673,"results":"60","hashOfConfig":"37"},{"size":7583,"mtime":1618929593967,"results":"61","hashOfConfig":"37"},{"size":5282,"mtime":1618948462415,"results":"62","hashOfConfig":"37"},{"size":9421,"mtime":1618772051592,"results":"63","hashOfConfig":"37"},{"size":3419,"mtime":1618863709474,"results":"64","hashOfConfig":"37"},{"size":553,"mtime":1618829781730,"results":"65","hashOfConfig":"37"},{"size":1270,"mtime":1618830368492,"results":"66","hashOfConfig":"37"},{"size":571,"mtime":1618866252474,"results":"67","hashOfConfig":"37"},{"size":8509,"mtime":1618941810599,"results":"68","hashOfConfig":"37"},{"size":4905,"mtime":1618942970485,"results":"69","hashOfConfig":"37"},{"size":11182,"mtime":1618862654526,"results":"70","hashOfConfig":"37"},{"size":7296,"mtime":1618926667261,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"kvpeh4",{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"D:\\Works\\Mich\\scharerity\\Frontend\\src\\index.js",[],["149","150"],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\App.js",["151"],"import './App.css';\n\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport Login from './Components/Login';\nimport Navbar from './Components/Navbar';\nimport Basket from './Components/Basket';\nimport Footer from './Components/Footer';\nimport Payment from './Components/Payment';\nimport Profile from './Components/Profile';\nimport ItemList from './Components/ItemList';\nimport ItemEdit from './Components/ItemEdit';\nimport Shipping from './Components/Shipping';\nimport Overview from './Components/Overview';\nimport Register from './Components/Register';\nimport OrderList from './Components/OrderList';\nimport Showitems from './Components/Showitems';\nimport ItemDetails from './Components/ItemDetails';\nimport OrderHistory from './Components/OrderHistory';\nimport OrderOverview from './Components/OrderOverview';\nimport AdminRoute from './Components/Routes/AdminRoute';\nimport PrivateRoute from './Components/Routes/PrivateRoute';\n\nfunction App() {\n  return (\n    <>\n\n      <Router>\n        <Navbar />\n\n        <Switch>\n          <Route exact path='/' component={Showitems} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/payment' component={Payment} />\n          <Route exact path='/shipping' component={Shipping} />\n          <Route exact path='/overview' component={Overview} />\n          <Route exact path='/register' component={Register} />\n          <Route exact path='/basket/:id?' component={Basket} />\n          <Route exact path='/detail/:id' component={ItemDetails} />\n          <Route exact path='/detail/:id/edit' component={ItemEdit} />\n          <AdminRoute exact path='/itemlist' component={ItemList} />\n          <PrivateRoute exact path='/profile' component={Profile} />\n          <AdminRoute exact path='/orderlist' component={OrderList} />\n          <Route exact path='/order/:id' component={OrderOverview} />\n          <Route exact path='/orderhistory' component={OrderHistory} />\n        </Switch>\n      </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\reportWebVitals.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Navbar.js",["152"],"import { \r\n    RiHome2Line, \r\n    RiLoginBoxLine, \r\n    RiShoppingBasketLine, \r\n    RiLogoutBoxLine, \r\n    RiUser3Line,\r\n    RiHistoryLine,\r\n    RiEditLine,\r\n    RiMoreFill,\r\n    RiAdminLine,\r\n    RiDashboardLine,\r\n    RiBookletLine,\r\n    RiFileListLine\r\n} from 'react-icons/ri';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Dropdown, DropdownItem, DropdownMenu } from 'styled-dropdown-component';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutUser } from './Redux/Actions/UserActions';\r\n\r\nconst Nav = styled.nav`\r\n    padding: 0 20px;\r\n    min-height: 9vh;\r\n    background: #f8f5f1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    @media (min-width: 769px) {\r\n        justify-content: center;\r\n    }\r\n`;\r\nconst DesktopLogo = styled.h1`\r\n    font-size: 40px;\r\n    color: #4b778d;\r\n    border: 1px solid #28b5b5;\r\n    padding: 5px;\r\n    cursor: default;\r\n    background-color: #f8ede3;\r\n\r\n    @media (max-width: 770px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst MobileLogo = styled.h1`\r\n    font-size: 30px;\r\n    color: #4b778d;\r\n    border: 1px solid #28b5b5;\r\n    padding: 5px;\r\n\r\n    @media (min-width: 769px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst Menu = styled.ul`\r\n    list-style: none;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    padding: 5px;\r\n    border: 1px solid #28b5b5;\r\n    background-color: #f8ede3;\r\n\r\n    @media (max-width: 768px) {\r\n        display: none;\r\n    }\r\n`; \r\nconst ListItem = styled.li`\r\n    font-size: 20px;\r\n    color: #4b778d;\r\n    text-decoration: none;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0 10px;\r\n    align-items: center;\r\n    transition: 0.5s;\r\n    letter-spacing: 1px;\r\n\r\n    :hover {\r\n        transform: scale(0.9);\r\n    }\r\n`;\r\nconst NavIcon = styled.button`\r\n    background: none;\r\n    cursor: pointer;\r\n    border: none;\r\n    outline: none;\r\n\r\n    @media (min-width: 769px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst Line = styled.span`\r\n    display: block;\r\n    border-radius: 50px;\r\n    width: 25px;\r\n    height: 3px;\r\n    margin: 5px;\r\n    background-color: #4b778d;\r\n    transition: width 0.4s ease-in-out;\r\n\r\n    :nth-child(2) {\r\n        width: ${props => (props.open ? \"40%\" : \"70%\")};\r\n    }\r\n`;\r\nconst Overlay = styled.div`\r\n    position: absolute;\r\n    height: ${props => (props.open ? \"91vh\" : 0)};\r\n    width: 100vw;\r\n    background: #f8f5f1;\r\n    transition: height 0.4s ease-in-out;\r\n\r\n    @media (min-width: 769px) {\r\n        display: none;\r\n    }\r\n`;\r\nconst OverlayMenu = styled.ul`\r\n    list-style: none;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 45%;\r\n    transform: translate(-50%, -50%);\r\n    padding: 0;\r\n    \r\n    li {\r\n        border: 1px solid #28b5b5;\r\n        padding: 5px;\r\n        text-alignment: center;\r\n        opacity: ${props => (props.open ? 1 : 0)};\r\n        font-size: 25px;\r\n        margin: 30px 0px;\r\n        transition: opacity 0.4s ease-in-out;\r\n    }\r\n\r\n    li:nth-child(2) {\r\n        margin: 30px 0px;\r\n    }\r\n`;\r\nconst List = styled.span`\r\n    margin: 0 8px;\r\n    cursor: pointer;\r\n`;\r\nconst CustomDropdownMenu = styled(DropdownMenu)`\r\n    background: #f8f5f1;\r\n    border: 1px solid #28b5b5;\r\n    border-radius: 0;\r\n    transition: 0.5s;\r\n`;\r\nconst CustomDropdownItem = styled(DropdownItem)`\r\n    color: #4b778d;\r\n\r\n    :hover {\r\n        color: #4b778d;\r\n        background-color: #f8ede3;\r\n    }\r\n`;\r\n\r\nexport default function Navbar() {\r\n    const [moreOpen, setMoreOpen] = React.useState(true);\r\n    const [adminOpen, setAdminOpen] = React.useState(true);\r\n    const [toggle, setToggleNav] = React.useState(false);\r\n    const basket = useSelector(state => state.basket);\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const dispatch = useDispatch();\r\n    const { basketItems } = basket;\r\n    const { userData } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        if(window.confirm(`ต้องการออกจากบัญชี \"${userData.fullname}\" หรือไม่?`)) {\r\n            dispatch(logoutUser());\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <div style={{display: 'flex', justifyContent: 'center', backgroundColor: '#f8f5f1'}}>\r\n                <DesktopLogo>Sharerity</DesktopLogo>\r\n            </div>\r\n            <Nav>\r\n                <MobileLogo>Sharerity</MobileLogo>\r\n\r\n                <Menu>\r\n                    <ListItem>\r\n                        <RiHome2Line />\r\n                        <Link to='/' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>หน้าหลัก</List>\r\n                        </Link>\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <RiShoppingBasketLine />\r\n                        <Link to='/basket' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>ตะกร้าหนังสือ</List>\r\n                            {basketItems.length > 0 && (\r\n                                <span>({basketItems.length})</span>\r\n                            )}\r\n                        </Link>\r\n                    </ListItem>\r\n\r\n                    {userData ? ( null ) : (\r\n                        <ListItem>\r\n                            <RiLoginBoxLine />\r\n                            <Link to='/login' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                <List>เข้าสู่ระบบ</List>\r\n                            </Link>\r\n                        </ListItem>\r\n                    )}\r\n                </Menu>\r\n\r\n                {userData ? (\r\n                    <Menu style={{marginLeft: '10px'}}>\r\n                        <Dropdown>\r\n                            <ListItem>\r\n                            <RiUser3Line />\r\n                                <List onClick={() => setMoreOpen(!moreOpen)}>{userData.fullname}</List>\r\n                            </ListItem>\r\n\r\n                            <CustomDropdownMenu hidden={moreOpen} toggle={() => setMoreOpen(!moreOpen)}>\r\n                                <CustomDropdownItem>\r\n                                    <RiEditLine />\r\n                                    <Link to='/profile' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>แก้ไขข้อมูลส่วนตัว</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiHistoryLine />\r\n                                    <Link to='/orderhistory' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>ประวัติการรับบริจาค</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiLogoutBoxLine />\r\n                                    <Link\r\n                                        style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}\r\n                                        onClick={logoutHandler}\r\n                                    >\r\n                                        <List>ออกจากระบบ</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n                            </CustomDropdownMenu>\r\n                        </Dropdown>\r\n                    </Menu>\r\n                ) : null}\r\n\r\n                {userData && userData.isAdmin && (\r\n                    <Menu style={{marginLeft: '10px'}}>\r\n                        <Dropdown>\r\n                            <ListItem>\r\n                            <RiAdminLine />\r\n                                <List onClick={() => setAdminOpen(!adminOpen)}>แอดมิน</List>\r\n                            </ListItem>\r\n\r\n                            <CustomDropdownMenu hidden={adminOpen} toggle={() => setAdminOpen(!adminOpen)}>\r\n                                <CustomDropdownItem>\r\n                                    <RiDashboardLine />\r\n                                    <Link to='/dashboard' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>แดชบอร์ด</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiUser3Line />\r\n                                    <Link to='/userlist' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>ผู้ใช้งาน</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiBookletLine />\r\n                                    <Link to='/itemlist' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>รายการหนังสือ</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                                <CustomDropdownItem>\r\n                                    <RiFileListLine />\r\n                                    <Link to='/orderlist' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                                        <List>รายการบริจาค</List>\r\n                                    </Link>\r\n                                </CustomDropdownItem>\r\n\r\n                            </CustomDropdownMenu>\r\n                        </Dropdown>\r\n                    </Menu>\r\n                )}\r\n\r\n                <NavIcon onClick={() => setToggleNav(!toggle)}>\r\n                    <Line open={toggle} />\r\n                    <Line open={toggle} />\r\n                    <Line open={toggle} />\r\n                </NavIcon>\r\n            </Nav>\r\n\r\n            <Overlay open={toggle}>\r\n                <OverlayMenu open={toggle}>\r\n\r\n                    <ListItem>\r\n                        <RiHome2Line />\r\n                        <Link to='/' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>หน้าหลัก</List>\r\n                        </Link>\r\n                    </ListItem>\r\n                    \r\n                    <ListItem>\r\n                        <RiLoginBoxLine />\r\n                        <Link to='/login' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>เข้าสู่ระบบ</List>\r\n                        </Link>\r\n                    </ListItem>\r\n\r\n                    <ListItem>\r\n                        <RiShoppingBasketLine />\r\n                        <Link to='/basket' style={{color: '#4b778d', fontSize: '20px', textDecoration: 'none'}}>\r\n                            <List>ตะกร้าหนังสือ</List>\r\n                            {basketItems.length > 0 && (\r\n                                <span>({basketItems.length})</span>\r\n                            )}\r\n                        </Link>\r\n                    </ListItem>\r\n    \r\n                </OverlayMenu>\r\n            </Overlay>\r\n\r\n        </React.Fragment>\r\n    )\r\n}","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Item.js",["153","154"],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Basket.js",["155","156","157"],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Footer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\LoadingScreen.js",["158"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-top: 50px;\r\n    height: 100%;\r\n    z-index: 100;\r\n`;\r\n\r\nexport default function LoadingScreen(props) {\r\n    const [color, setColor] = React.useState('#28b5b5')\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Container>\r\n                <ClipLoader color={color} size={120} />\r\n            </Container>\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n}","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\MessageScreen.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Store.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\ItemActions.js",["159"],"import {\r\n    ITEM_CREATE_REQUEST,\r\n    ITEM_CREATE_SUCCESS,\r\n    ITEM_CREATE_FAILURE,\r\n    ITEM_DETAILS_FAILURE,\r\n    ITEM_DETAILS_REQUEST,\r\n    ITEM_DETAILS_SUCCESS,\r\n    ITEM_LIST_FAILURE,\r\n    ITEM_LIST_REQUEST,\r\n    ITEM_LIST_SUCCESS,\r\n    ITEM_UPDATE_REQUEST,\r\n    ITEM_UPDATE_SUCCESS,\r\n    ITEM_UPDATE_FAILURE,\r\n    ITEM_DELETE_REQUEST,\r\n    ITEM_DELETE_SUCCESS,\r\n    ITEM_DELETE_FAILURE\r\n} from '../Constants/AllConstants';\r\nimport axios from 'axios';\r\n\r\nexport const listItems = () => async (dispatch) => {\r\n    dispatch({\r\n        type: ITEM_LIST_REQUEST\r\n    });\r\n\r\n    try {\r\n        const { data } = await axios.get('/api/items');\r\n        dispatch({ \r\n            type: ITEM_LIST_SUCCESS, \r\n            payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_LIST_FAILURE, \r\n            payload: error.message \r\n        });\r\n    }\r\n};\r\n\r\nexport const detailItems = (itemId) => async (dispatch) => {\r\n    dispatch({\r\n        type: ITEM_DETAILS_REQUEST, \r\n        payload: itemId\r\n    });\r\n\r\n    try{\r\n        const { data } = await axios.get(`/api/items/${itemId}`);\r\n        dispatch({\r\n            type: ITEM_DETAILS_SUCCESS, \r\n            payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_DETAILS_FAILURE, \r\n            payload: error.response && error.response.data.message ? \r\n                error.response.data.message : error.message \r\n    });\r\n    }\r\n};\r\n\r\nexport const createItem = () => async (dispatch, getState) => {\r\n    dispatch({ \r\n        type: ITEM_CREATE_REQUEST \r\n    });\r\n\r\n    try {\r\n        const { userLogin } = getState();\r\n        const { data } = await axios.post('/api/items', {}, {\r\n            headers: { \r\n                Authorization: `Bearer ${userLogin.userData.token}` },\r\n        });\r\n        dispatch({\r\n            type: ITEM_CREATE_SUCCESS,\r\n            payload: data.item,\r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_CREATE_FAILURE, \r\n            payload: error.response && error.response.data.message ? \r\n            error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateItem = (item) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: ITEM_UPDATE_REQUEST, \r\n        payload: item \r\n    });\r\n\r\n    try {\r\n        const { userLogin } = getState();\r\n        const { data } = await axios.put(`/api/items/${item._id}`, item, {\r\n            headers: { \r\n                Authorization: `Bearer ${userLogin.userData.token}` },\r\n        });\r\n        dispatch({ \r\n            type: ITEM_UPDATE_SUCCESS, \r\n            payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_UPDATE_FAILURE, \r\n            error: error.response && error.response.data.message ? \r\n            error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteItem = (itemId) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: ITEM_DELETE_REQUEST, \r\n        payload: itemId\r\n    });\r\n\r\n    try {\r\n        const { userLogin } = getState();\r\n        const { data } = await axios.delete(`/api/items/${itemId}`, {\r\n            headers: { \r\n                Authorization: `Bearer ${userLogin.userData.token}` },\r\n        });\r\n        dispatch({ \r\n            type: ITEM_DELETE_SUCCESS, \r\n        });\r\n    } catch(error) {\r\n        dispatch({ \r\n            type: ITEM_DELETE_FAILURE, \r\n            error: error.response && error.response.data.message ? \r\n            error.response.data.message\r\n            : error.message\r\n        });\r\n    }\r\n};","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Constants\\allConstants.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Constants\\AllConstants.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\BasketReducer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\BasketActions.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Login.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Register.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\UserReducer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\UserActions.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Shipping.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Payment.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Overview.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Actions\\OrderActions.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\OrderReducer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\OrderOverview.js",["160"],"import { deliverOrder, detailsOrder } from './Redux/Actions/OrderActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport LoadingScreen from './LoadingScreen';\r\nimport MessageScreen from './MessageScreen';\r\nimport { ORDER_DELIVER_RESET } from './Redux/Constants/AllConstants';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    padding: 60px 150px;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #f8f5f1;\r\n`;\r\nconst Card = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: solid 1px #28b5b5;\r\n    background-color: #f8f5f1;\r\n    box-sizing: border-box;\r\n    width: 1000px;\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        box-shadow:\r\n            0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n            0 6.7px 5.3px rgba(0, 0, 0, 0.048),\r\n            0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n            0 22.3px 17.9px rgba(0, 0, 0, 0.072),\r\n            0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n            0 100px 80px rgba(0, 0, 0, 0.12)\r\n        ;\r\n        background-color: #f8ede3;\r\n    }\r\n`;\r\nconst PageTitle = styled.h1`\r\n    text-transform: uppercase;\r\n    margin: 30px 0 10px;\r\n    color: #4b778d;\r\n`;\r\nconst Section = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: space-evenly;\r\n    width: 100%;\r\n`;\r\nconst Zoning = styled.div`\r\n    margin: 0 10px 5px 10px;\r\n    padding: 10px;\r\n    transition: 0.5s;\r\n    border: 1px solid #28b5b5;\r\n\r\n    :hover {\r\n        box-shadow: rgba(17, 12, 46, 0.15) 0px 48px 100px 0px;\r\n        background-color: #f8ede3;\r\n    }\r\n`;\r\nconst ZoneTitle = styled.h3`\r\n    cursor: default;\r\n    color: #4b778d;\r\n    text-align: center\r\n`;\r\nconst ZoneDetail = styled.p`\r\n    cursor: default;\r\n    color: #4b778d;\r\n    margin: 0 0 10px;\r\n`;\r\nconst Button = styled.button`\r\n    cursor: pointer;\r\n    color: #f8ede3;\r\n    background-color: #28b5b5;\r\n    font-size: 1em;\r\n    padding: 0.5em 2em;\r\n    margin: ${props => props.order ? \"50px 0 30px\" : \"10px 0 30px\"};\r\n    border: solid 2px #28b5b5;\r\n    width: 50%;\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: #8fd9a8;\r\n        border: solid 2px #8fd9a8;\r\n    }\r\n\r\n    @media (max-width: 770px) {\r\n        margin: 50px 0 30px;\r\n        padding: 0.5em 2em;\r\n        margin-left: 0;\r\n    }\r\n`;\r\nconst OrderIdTitle = styled.span`\r\n    margin: 10px 0 30px;\r\n    color: #28b5b5;\r\n`;\r\nconst Img = styled.img`\r\n    width: 100%;\r\n    max-width: 300px;\r\n`;\r\n\r\nexport default function OrderOverview(props) {\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { userData } = userLogin;\r\n    const { loading, error, order } = orderDetails\r\n    const { \r\n        loading: loadingDeliver, \r\n        error: errorDeliver, \r\n        success: successDeliver  \r\n    } = orderDeliver;\r\n    const orderId = props.match.params.id;\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order._id));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(!order || successDeliver || (order && order._id !== orderId))  {\r\n            dispatch(detailsOrder(orderId));\r\n            dispatch({\r\n                type: ORDER_DELIVER_RESET\r\n            });\r\n        }\r\n    }, [dispatch, orderId, successDeliver]);\r\n\r\n    return loading ? (<LoadingScreen />) :\r\n        error ? (<MessageScreen></MessageScreen>) :\r\n    (\r\n        <React.Fragment>\r\n\r\n            <Container>\r\n\r\n                {loadingDeliver && (\r\n                    <div style={{margin: '10px 0 30px'}}>\r\n                        <LoadingScreen />\r\n                    </div>\r\n                )}\r\n                {errorDeliver && (\r\n                    <div style={{padding: '10px 10px 30px'}}>\r\n                        <MessageScreen color={false}>{errorDeliver}</MessageScreen> \r\n                    </div>\r\n                )}\r\n\r\n                <Card>\r\n                    <PageTitle>รายละเอียดการรับบริจาค</PageTitle>\r\n                    <OrderIdTitle><strong>หมายเลขรายการ : {order._id}</strong></OrderIdTitle>\r\n                    \r\n                    <Section>\r\n                        {order.isDelivered ? (\r\n                            <Zoning>\r\n                                <ZoneDetail style={{margin: 0}}>\r\n                                    <strong>สถานะการขนส่ง : </strong>พัสดุได้รับการจัดส่งแล้ว {order.deliveredAt}\r\n                                </ZoneDetail>\r\n                            </Zoning> ) : (\r\n                            <Zoning>\r\n                                <ZoneDetail style={{margin: 0}}>\r\n                                    <strong>สถานะการขนส่ง : </strong>พัสดุอยู่ระหว่างการขนส่ง\r\n                                </ZoneDetail>\r\n                            </Zoning>\r\n                        )}\r\n                        <Zoning>\r\n                            <ZoneTitle>ที่อยู่ในการจัดส่ง</ZoneTitle>\r\n                            <ZoneDetail><strong>ชื่อผู้รับ : </strong>{order.shippingAddress.fullname}</ZoneDetail>\r\n                            <ZoneDetail><strong>เบอร์โทรศัพท์ : </strong>{order.shippingAddress.phoneNumber}</ZoneDetail>\r\n                            <ZoneDetail><strong>ที่อยู่ : </strong>{order.shippingAddress.address} อำเภอ {order.shippingAddress.district}\r\n                                จังหวัด {order.shippingAddress.province} รหัสไปรษณีย์ {order.shippingAddress.postal}\r\n                            </ZoneDetail>\r\n                        </Zoning>\r\n\r\n                        <Zoning>\r\n                            <ZoneTitle>ชำระเงิน</ZoneTitle>\r\n                            <ZoneDetail><strong>วิธีการชำระเงิน : </strong>{order.paymentMethod}</ZoneDetail>\r\n                        </Zoning>\r\n\r\n                        <Zoning>\r\n                            <ZoneTitle>หนังสือที่รับบริจาค</ZoneTitle>\r\n                            {order.orderItems.map(item => (\r\n                                <React.Fragment>\r\n                                    <ZoneDetail>{item.title}</ZoneDetail>\r\n                                    <ZoneDetail>{item.writer}</ZoneDetail>\r\n                                    <ZoneDetail>\r\n                                        <Img src={item.image} alt={item.title} />\r\n                                    </ZoneDetail>\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </Zoning>\r\n                    </Section>\r\n                    {userData.isAdmin && !order.isDelivered && (\r\n                        <Button \r\n                            order\r\n                            onClick={deliverHandler}\r\n                            // disabled={order.orderItems.length === 0}\r\n                        >นำส่ง</Button> \r\n                    )}\r\n\r\n                </Card>\r\n            </Container>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\OrderHistory.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Profile.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Redux\\Reducers\\ItemReducer.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\PrivateRoute.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Showitems.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\Routes\\AdminRoute.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\ItemList.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\ItemDetails.js",[],"D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\ItemEdit.js",["161","162"],"import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { detailItems, updateItem } from './Redux/Actions/ItemActions';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport MessageScreen from './MessageScreen';\r\nimport { ITEM_UPDATE_RESET } from './Redux/Constants/AllConstants';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled.div`\r\n    padding: 60px 150px;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: #f8f5f1;\r\n\r\n    @media (max-width: 770px) {\r\n        padding: 0;\r\n        height: 100vh;\r\n    }\r\n`;\r\nconst Card = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: solid 1px #28b5b5;\r\n    width: 1000px;\r\n    transition: 0.5s;\r\n    background-color: #f8f5f1;\r\n    :hover {\r\n        box-shadow:\r\n            0 2.8px 2.2px rgba(0, 0, 0, 0.034),\r\n            0 6.7px 5.3px rgba(0, 0, 0, 0.048),\r\n            0 12.5px 10px rgba(0, 0, 0, 0.06),\r\n            0 22.3px 17.9px rgba(0, 0, 0, 0.072),\r\n            0 41.8px 33.4px rgba(0, 0, 0, 0.086),\r\n            0 100px 80px rgba(0, 0, 0, 0.12)\r\n        ;\r\n        background-color: #f8ede3;\r\n\r\n    }\r\n`;\r\nconst PageTitle = styled.h1`\r\n    text-transform: uppercase;\r\n    margin: 30px 0 50px;\r\n    color: #4b778d;\r\n`;\r\nconst Button = styled.button`\r\n    cursor: pointer;\r\n    color: #f8ede3;\r\n    background-color: #28b5b5;\r\n    font-size: ${props => props.register ? \"1em\" : \"0.8em\"};\r\n    padding: ${props => props.register ? \"0.5em 2em\" : \"\"};\r\n    margin: ${props => props.register ? \"50px 0 30px\" : \"\"};\r\n    margin-left: ${props => props.register ? \"\" : \"10px\"};\r\n    border: solid 2px #28b5b5;\r\n    width: ${props => props.register ? \"50%\" : \"\"};\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: #8fd9a8;\r\n        border: solid 2px #8fd9a8;\r\n    }\r\n\r\n    @media (max-width: 770px) {\r\n        margin: ${props => props.register ? \"50px 0 30px\" : \"\"};\r\n        padding: ${props => props.register ? \"0.5em 2em;\" : \"\"};\r\n        margin-left: 0;\r\n    }\r\n`;\r\nconst Input = styled.input`\r\n    font-size: 15px;\r\n    box-sizing: border-box;\r\n    padding: 0.5rem 0.5rem;\r\n    margin: 10px 0;\r\n    border: solid 2px #28b5b5;\r\n    border-radius: 3px;\r\n    width: 100%;\r\n    color: #4b778d;\r\n    background-color: #f8f5f1;\r\n    transition: 0.5s;\r\n    \r\n    :focus {\r\n        border: solid 2px #d2e69c;\r\n    }\r\n`;\r\nconst Label = styled.h3`\r\n    margin: 0;\r\n    color: #4b778d;\r\n`;\r\nconst Form = styled.form`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\nconst Textarea = styled.textarea`\r\n    font-size: 17px;\r\n    box-sizing: border-box;\r\n    padding: 0.5rem 0.5rem;\r\n    margin: 10px 0;\r\n    border: solid 2px #28b5b5;\r\n    border-radius: 3px;\r\n    width: 100%;\r\n    color: #4b778d;\r\n    background-color: #f8f5f1;\r\n    transition: 0.5s;\r\n\r\n    :focus {\r\n        border: solid 2px #d2e69c;\r\n    }\r\n`;\r\nconst BackButton = styled.button`\r\n    cursor: pointer;\r\n    color: #f8ede3;\r\n    background-color: #28b5b5;\r\n    border: solid 2px #28b5b5;\r\n    width: 100px;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    transition: 0.5s;\r\n\r\n    :hover {\r\n        color: #ffffff;\r\n        background-color: #8fd9a8;\r\n        border: solid 2px #8fd9a8;\r\n    }\r\n`;\r\n\r\nexport default function ItemEdit(props) {\r\n    const [title, setTitle] = React.useState('');\r\n    const [image, setImage] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const [category, setCategory] = React.useState('');\r\n    const [writer, setWriter] = React.useState('');\r\n    const [quantity, setQuantity] = React.useState('');\r\n    const [loadingUpload, setLoadingUpload] = React.useState(false);\r\n    const [errorUpload, setErrorUpload] = React.useState('');\r\n\r\n    const itemDetails = useSelector(state => state.itemDetails);\r\n    const itemUpdate = useSelector(state => state.itemUpdate);\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, item } = itemDetails;\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = itemUpdate;\r\n    const itemId = props.match.params.id;\r\n    const dispatch = useDispatch();\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const Formdata = new FormData();\r\n\r\n        Formdata.append('image', file);\r\n        setLoadingUpload(true);\r\n\r\n        try {\r\n            const { data } = await axios.post('/api/uploads', Formdata, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userLogin.userData.token}`,\r\n                }\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch(error) {\r\n            setErrorUpload(error.message);\r\n            setLoadingUpload(false);\r\n        };\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateItem({\r\n            _id: itemId,\r\n            title,\r\n            image,\r\n            description,\r\n            category,\r\n            writer,\r\n            quantity\r\n        }));\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if(successUpdate) {\r\n            dispatch({\r\n                type: ITEM_UPDATE_RESET\r\n            });\r\n            props.history.push('/itemlist');\r\n        }\r\n\r\n        if(!item || item._id !== itemId) {\r\n            dispatch(detailItems(itemId));\r\n        } else {\r\n            setTitle(item.title);\r\n            setImage(item.image);\r\n            setDescription(item.description);\r\n            setCategory(item.category);\r\n            setWriter(item.writer);\r\n            setQuantity(item.quantity);\r\n        }\r\n    }, [item, dispatch, itemId, successUpdate, props.history]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Container>\r\n                <Link to='/itemlist'>\r\n                    <BackButton>กลับ</BackButton>\r\n                </Link>\r\n\r\n                <Card>\r\n                    {loadingUpdate &&\r\n                        <div style={{margin: '10px 0 30px'}}>\r\n                            <LoadingScreen />\r\n                        </div>\r\n                    }\r\n                    {errorUpdate && \r\n                        <div style={{margin: '10px 0 30px'}}>\r\n                            <MessageScreen color={false}>{errorUpdate}</MessageScreen>\r\n                        </div>\r\n                    }\r\n                    {loading ? \r\n                        <LoadingScreen /> : \r\n                    error ? \r\n                        <MessageScreen color={false}>{error}</MessageScreen> : (\r\n\r\n                        <>\r\n                        <PageTitle>แก้ไขข้อมูล {itemId}</PageTitle>\r\n\r\n                        <Form onSubmit={submitHandler}>\r\n                            <div style={{width: '50%'}}>\r\n                                <Label>ชื่อหนังสือ</Label>\r\n                                <Input \r\n                                    placeholder='กรอกชื่อหนังสือของคุณ' \r\n                                    type='text'\r\n                                    id='title'\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                ></Input>\r\n\r\n                                <Label>รายละเอียด</Label>\r\n                                <Textarea\r\n                                    rows='5'\r\n                                    placeholder='กรอกรายละเอียดหนังสือของคุณ' \r\n                                    type='text'\r\n                                    id='description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Textarea>\r\n\r\n                                <Label>รูปภาพ</Label>\r\n                                <Input\r\n                                    disabled\r\n                                    placeholder='อัปโหลดรูปภาพหนังสือของคุณ' \r\n                                    type='text'\r\n                                    id='image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Input>\r\n\r\n                                <Label>อัปโหลดรูปภาพ</Label>\r\n                                <Input\r\n                                    type='file'\r\n                                    id='imageFile'\r\n                                    label='เลือกไฟล์'\r\n                                    onChange={uploadFileHandler}\r\n                                ></Input>\r\n\r\n                                <Label></Label>\r\n                                \r\n                                <Label>ประเภท</Label>\r\n                                <Input\r\n                                    placeholder='กรอกประเภทหนังสือของคุณ' \r\n                                    type='text'\r\n                                    id='category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                ></Input>\r\n\r\n                                <Label>ผู้เขียน</Label>\r\n                                <Input\r\n                                    placeholder='กรอกชื่อผู้เขียนหนังสือของคุณ' \r\n                                    type='text'\r\n                                    id='writer'\r\n                                    value={writer}\r\n                                    onChange={(e) => setWriter(e.target.value)}\r\n                                ></Input>\r\n\r\n                                <Label>จำนวน</Label>\r\n                                <Input\r\n                                    placeholder='กรอกจำนวนหนังสือของคุณ' \r\n                                    type='text'\r\n                                    id='quantity'\r\n                                    value={quantity}\r\n                                    onChange={(e) => setQuantity(e.target.value)}\r\n                                ></Input>\r\n                            </div>\r\n\r\n                            <Button register type='submit'>\r\n                                แก้ไขข้อมูล\r\n                            </Button>\r\n                        </Form>\r\n                        </>\r\n\r\n                    )}\r\n                </Card>\r\n            </Container>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","D:\\Works\\Mich\\scharerity\\Frontend\\src\\Components\\OrderList.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":14},{"ruleId":"167","severity":1,"message":"171","line":9,"column":5,"nodeType":"169","messageId":"170","endLine":9,"endColumn":15},{"ruleId":"167","severity":1,"message":"172","line":1,"column":23,"nodeType":"169","messageId":"170","endLine":1,"endColumn":34},{"ruleId":"167","severity":1,"message":"173","line":81,"column":11,"nodeType":"169","messageId":"170","endLine":81,"endColumn":29},{"ruleId":"167","severity":1,"message":"174","line":144,"column":7,"nodeType":"169","messageId":"170","endLine":144,"endColumn":17},{"ruleId":"167","severity":1,"message":"175","line":154,"column":7,"nodeType":"169","messageId":"170","endLine":154,"endColumn":14},{"ruleId":"167","severity":1,"message":"176","line":163,"column":7,"nodeType":"169","messageId":"170","endLine":163,"endColumn":14},{"ruleId":"167","severity":1,"message":"177","line":16,"column":19,"nodeType":"169","messageId":"170","endLine":16,"endColumn":27},{"ruleId":"167","severity":1,"message":"178","line":119,"column":17,"nodeType":"169","messageId":"170","endLine":119,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":130,"column":8,"nodeType":"181","endLine":130,"endColumn":43,"suggestions":"182"},{"ruleId":"167","severity":1,"message":"183","line":141,"column":12,"nodeType":"169","messageId":"170","endLine":141,"endColumn":25},{"ruleId":"167","severity":1,"message":"184","line":142,"column":12,"nodeType":"169","messageId":"170","endLine":142,"endColumn":23},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'RiMoreFill' is defined but never used.","'useSelector' is defined but never used.","'addToBasketHandler' is assigned a value but never used.","'Breadcrumb' is assigned a value but never used.","'BreadUl' is assigned a value but never used.","'BreadLi' is assigned a value but never used.","'setColor' is assigned a value but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'order'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'loadingUpload' is assigned a value but never used.","'errorUpload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [dispatch, order, orderId, successDeliver]",{"range":"190","text":"191"},[3535,3570],"[dispatch, order, orderId, successDeliver]"]