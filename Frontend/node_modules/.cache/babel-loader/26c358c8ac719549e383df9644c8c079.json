{"ast":null,"code":"var _jsxFileName = \"D:\\\\Works\\\\Mich\\\\scharerity\\\\Frontend\\\\src\\\\Components\\\\ListItem.js\",\n    _s = $RefreshSig$();\n\nimport Item from './Item';\nimport LoadingScreen from './LoadingScreen';\nimport MessageScreen from './MessageScreen';\nimport React from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-around;\n    align-items: flex-start;\n    height: 100%;\n    padding: 60px 150px;\n    background-color: #ffffff;\n`;\nexport default function ListItem() {\n  _s();\n\n  const [items, setItems] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(false);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await axios.get('/api/items');\n        setItems(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListItem, \"s4mQZ8dHgLXdNasBDy/9xAC6bXg=\");\n\n_c = ListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"sources":["D:/Works/Mich/scharerity/Frontend/src/Components/ListItem.js"],"names":["Item","LoadingScreen","MessageScreen","React","axios","styled","Container","div","ListItem","items","setItems","useState","loading","setLoading","error","setError","useEffect","fetchData","data","get","message"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACQ,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACQ,QAAN,CAAe,KAAf,CAA1B;AACAR,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClB,UAAMC,SAAS,GAAG,YAAY;AAC1B,UAAG;AACCJ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAM;AAAEK,UAAAA;AAAF,YAAW,MAAMd,KAAK,CAACe,GAAN,CAAU,YAAV,CAAvB;AACAT,QAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OALD,CAKE,OAAMC,KAAN,EAAa;AACXC,QAAAA,QAAQ,CAACD,KAAK,CAACM,OAAP,CAAR;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAVD;;AAWAI,IAAAA,SAAS;AACZ,GAbD,EAaG,EAbH;AAeA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAtCuBT,Q;;KAAAA,Q","sourcesContent":["import Item from './Item';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport MessageScreen from './MessageScreen';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n    height: 100%;\r\n    padding: 60px 150px;\r\n    background-color: #ffffff;\r\n`;\r\n\r\nexport default function ListItem() {\r\n    const [items, setItems] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            try{\r\n                setLoading(true);\r\n                const { data } = await axios.get('/api/items');\r\n                setItems(data);\r\n                setLoading(false);\r\n            } catch(error) {\r\n                setError(error.message);\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <LoadingScreen />\r\n\r\n            {/* {loading ? (\r\n                <LoadingScreen></LoadingScreen>\r\n                ) : error ? (\r\n                <MessageScreen>{error}</MessageScreen>\r\n                ) : (\r\n            <Container>\r\n                {items.map((object) => (\r\n                    <Item key={object._id} object={object} />\r\n                ))}\r\n            </Container>\r\n            )} */}\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}